<style lang="scss">
  @import "../css/common";
  .shopCart {
    .no-data {
      margin-top: torpx(215);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      .img {
        height: torpx(188);
        width: torpx(188);
        border-radius: 50%;
        overflow: hidden;
        background: #e9e9e9;
        display: flex;
        justify-content: center;
        align-items: center;
        & > image {
          width: torpx(87);
          height: torpx(83);
        }
      }
      .tip1 {
        color: #333333;
        font-size: torpx(30);
        margin: torpx(37) 0 torpx(16) 0;
      }
      .tip2 {
        color: #999999;
        font-size: torpx(30);
      }
    }
    .list-container {
      padding: torpx(20) 0;
      .list {
        padding-bottom: 50px;
      }
      .item {
        background: #ffffff;
        padding: torpx(30) torpx(20);
        display: flex;
        position: relative;
        &::after {
          content: ' ';
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
          height: 1px;
          transform: translateY(0.5);
          background: #eeeeee;
        }
      }
      .c {
        display: flex;
        align-items: center;
      }
      .good-image {
        width: torpx(170);
        height: torpx(220);
        margin: 0 torpx(20);
        border: solid 1px #eeeeee;
        background: #ffffff;
        display: flex;
        align-items: center;
        justify-content: center;
        image {
          width: 100%;
          height: 100%;
        }
      }
      .content {
        flex: 1;
        display: flex;
        flex-direction: column;
        .name {
          color: #333333;
          font-size: torpx(30);
        }
        .desc {
          color: #999999;
          font-size: torpx(24);
          margin-top: torpx(12);
          margin-bottom: torpx(40);
        }
        .b {
          display: flex;
          flex-direction: column;
          margin-bottom: torpx(10);
        }
        .price {
          color: #cf0210;
          font-size: torpx(36);
          width: 100%;
          text-align: right;
        }
        .good-step-view {
          display: flex;
          width: 100%;
          flex-direction: row-reverse;
        }
      }
      .del-goods {
        width: 60px;
        background: #cf0210;
        color: #ffffff;
        height: 100%;
        display: flex;
        justify-content: flex-start;
        .rightItem {
          /*width: 50%;*/
          flex: 1;
          display: flex;
          align-items: center;
          justify-content: center;
          text-align: center;
          &:first-child {
            background: #e39f3d;
            height: 100%;
          }
        }
      }
    }
    .bottom {
      /*bottom: torpx(108);*/
      .all {
        padding-left: torpx(20);
      }
      &.isPx {
        /*bottom: torpx(188) !important;*/
      }
    }
    .van-submit-bar__bar--safe {
      padding-bottom: 0 !important;
    }
    .van-submit-bar {
      .van-button {
        background-color: #cf000e;
        border: 1px solid #cf000e
      }
      .van-submit-bar__price {
        color: #cf000e;
        font-size: torpx(26);
      }
    }
  }

  .toastWarpTJ {
    background: #fff;
    width: torpx(670);
    position: relative;
    overflow: hidden;
    border-radius: torpx(20);
    .close {
      width: torpx(35);
      height: torpx(35);
      position: absolute;
      top: torpx(20);
      right: torpx(20);
    }
    .title {
      line-height: torpx(84);
      text-align: center;
      font-size: torpx(36);
      color: #000;
    }
    .goods {
      display: flex;
      justify-content: flex-start;
      padding: torpx(32) 0;
      margin: 0 torpx(30);
      box-sizing: border-box;
      border-top: torpx(1) solid #dcdcdc;
      border-bottom: torpx(1) solid #dcdcdc;
      .img {
        width: torpx(112);
        height: torpx(112);
        border: torpx(1) solid #dddddd;
        padding: torpx(5);
        box-sizing: border-box;
        border-radius: torpx(10);
        image {
          border-radius: torpx(10);
          width: 100%;
          height: 100%;
        }
      }
      .infoSingle {
        flex: 1;
        margin-left: torpx(10);
        margin-right: torpx(60);
        .SingleTietle {
          font-size: torpx(28);
          color: #000;
          height: torpx(75);
        }
        .priceSingle {
          font-size: torpx(32);
          color: #f2441c;
          sub {
            font-size: torpx(22);
          }
        }
      }
      .number {
        font-size: torpx(24);
        color: #999;
      }
    }
    .adjustment {
      padding: 0 torpx(30);
      box-sizing: border-box;
      height: torpx(220);
      .decsTitle {
        font-size: torpx(24);
        color: #000;
        /*line-height: torpx(116);*/
        padding-top: torpx(36);
        float: left;
      }
      .calc {
        float: right;
        .priceshow {
          font-size: torpx(18);
          color: #999;
          display: flex;
          justify-content: flex-end;
          margin-top: torpx(30);
          margin-bottom: torpx(5);
          .input {
            width: torpx(210);
            line-height: torpx(80);
            height: torpx(80);
            border: torpx(1) solid #cccccc;
            border-radius: torpx(10);
            padding: torpx(20) torpx(14);
            display: inline-block;
            font-size: torpx(32);
            color: #333;
            margin-right: torpx(5);
          }
          .q {
            align-self: center;
          }
        }
        .discountMoney {
          font-size: torpx(24);
          color: #999;
          margin-left: torpx(20);
        }
      }
    }
    .enterPrice {
      height: torpx(90);
      color: white;
      padding: 0 torpx(25) torpx(30);
      view {
        background: #e39f3d;
        text-align: center;
        line-height: torpx(90);
        border-radius: torpx(10);
      }
    }
  }
  .van-popup {
    overflow-y: visible !important;
    background: none !important;
  }
</style>
<template>
  <view class="shopCart">
    <view class="no-data" wx:if="{{list.length <= 0}}">
      <view class="img">
        <image src="../images/no_shop.png"></image>
      </view>
      <text class="tip1">你购物车里还没有商品</text>
      <text class="tip2">快去逛逛吧!</text>
    </view>
    <scroll-view scroll-y wx:else style="height:{{ discountMoney ? '92vmax' : '100vmax'}}">
      <view class="list-container">
        <view class="list">
          <van-checkbox-group value="{{ result }}" bind:change="onChange">  <!--bind:change="onChange"-->
            <block wx:for="{{list}}" wx:key="{{item.id}}">
              <van-swipe-cell
                data-index="{{item.id}}"
                right-width="{{rightWidthOp}}"
              >
                <view class="item" @tap="gotoInfo({{ item.id }})">
                  <view class="c"
                        catchtap="loop"
                  >
                    <van-checkbox
                      checked-color="#cf0210"
                      name="{{item.id}}"
                    >
                    </van-checkbox>
                  </view>
                  <view class="good-image">
                    <image mode="aspectFit" src="{{item.goods_cover}}"></image>
                  </view>
                  <view class="content">
                    <view  class="name ellipsis-1">{{item.goods_title}}</view>
                    <view class="desc" >{{item.cate_id_text}}</view>
                    <view class="b">
                      <view class="price">￥{{item.goods_price}}</view>
                      <view class="good-step-view">
                        <van-stepper
                          custom-class="good-step"
                          min="1"
                          max="99"
                          value="{{ item.num }}"
                          integer="{{true}}"
                          catchtap="loop"
                          bind:change="onNumChange"
                          data-index="{{item.id}}"
                        />
                      </view>
                    </view>
                  </view>
                </view>
                <view slot="right" class="del-goods" style="width:{{delGoods}}px">
                  <view wx:if="{{change_price_open == 1}}" bind:tap="changePrice" data-index="{{index}}"  class="rightItem"><text>调价</text></view>
                  <view bind:tap="delGood" data-index="{{item.id}}" class="rightItem"><text>删22除</text></view>
                </view>
              </van-swipe-cell>
            </block>
          </van-checkbox-group>
        </view>
      </view>
    </scroll-view>
    <van-submit-bar
      custom-class="bottom {{isIpx ? 'isPx' : ''}}"
      price="{{ totalAmount }}"
      button-text="{{subText}}"
      disabled="{{subText == '去结算'}}"
      bind:submit="goPay"
      tip="{{ primaryPrice }}"
    >
      <view slot="tip">
        已经优惠{{ discountMoney }}元
      </view>
      <view class="all">
        <van-checkbox
          checked-color="#cf0210"
          value="{{ allChecked }}"
          bind:change="allChange"
        >
          全选
        </van-checkbox>
      </view>
    </van-submit-bar>
  </view>

  <van-popup show="{{ showChangePriceToast }}" z-index="9999" catch:close="onClose">
    <view class="toastWarpTJ">
      <image src="./../images/salesman/close.png" class="close" catchtap="onClose"></image>
      <view class="title">调价</view>
      <view class="goods">
        <view class="img">
          <image src="{{list[changeIndex].goods_cover}}"></image>
        </view>
        <view class="infoSingle">
          <view class="SingleTietle ellipsis-2">{{list[changeIndex].goods_title}}</view>
          <view class="priceSingle"><sub>￥</sub>{{list[changeIndex].goods_price}}</view>
        </view>
        <view class="number">x{{list[changeIndex].num}}</view>
      </view>
      <view class="adjustment">
        <view class="decsTitle">
          <view>将成交价调整为：</view>
          <view style="height: 10rpx"></view>
          <view wx:if="{{priceRang}}" class="priceRang">{{priceRang}}</view>
        </view>
        <view class="calc">
          <view class="priceshow"><input class="input" bindinput="autoChangePrice"  type="digit"
                                           value="{{changePriceValue}}" />
              <text class="q">元</text>
          </view>
          <view wx:if="{{discountRate-0 !== 10}}" class="discountMoney">折扣:{{discountRate}}折</view>
        </view>
      </view>
      <view class="enterPrice">
        <view catchtap="confirmAdjustPeic">确认修改</view>
      </view>
    </view>
  </van-popup>
</template>
<script>
import wepy from 'wepy'
import lf from 'lf'

export default class managerShopCart extends wepy.component {
  props = {
  }
  data = {
    isIpx: false,
    timeEvent: null,
    allChecked: false,
    list: [],
    storeGoods: null,
    result: [],
    showChangePriceToast: false,
    primaryPrice: false,
    changeIndex: null,
    changePriceValue: 0,
    discountRate: 10,
    discountMoney: null,
    goods_ratio: 0,
    priceRang: null,
    minimumValue: 0,
    change_price_open: 0,
    rightWidthOp: 60,
    delGoods: 60
  }

  computed = {
    subText () {
      const l = this.result.length
      if (l === 0) {
        return '去下单'
      }
      return `去下单(${l})`
    },
    totalAmount () {
      let r = 0
      let index = -1
      this.result.forEach(v => {
        index = this.getIndexById(v)
        if (index > -1) {
          r += lf.mult(+this.list[index].num, +this.list[index].goods_price)
        }
      })
      return lf.mult(r, 100)
    }
  }
  events = { }
  loop () {}
  methods = {
    gotoInfo (goodsId) {
      wx.navigateTo({
        url: 'wineInfo?goodsId=' + goodsId
      })
    },
    delGood (event) {
      console.log(2)
      const id = event.currentTarget.dataset.index
      const index = this.getIndexById(id)
      const rIndex = this.result.findIndex(v => {
        return v === id.toString()
      })
      console.error(id, index, rIndex)
      if (rIndex > -1) {
        this.result.splice(rIndex, 1)
        if (this.result.length === 0) {
          this.allChecked = false
        }
      }
      // const list = JSON.parse(JSON.stringify(this.list))
      // list.splice(index, 1)
      // this.list = list
      this.list.splice(index, 1)
      this.discountMoney = 0
      this.list.forEach(item => {
        this.discountMoney = +this.discountMoney + ((+item.goods_price_adjust - +item.goods_price) * +item.num)
      })
      this.isShowTip(this.discountMoney)
      this.discountMoney = this.discountMoney.toFixed(2)
      this.$apply()
      // this.multSaveList()
      this.changeListChecked()
      this.$apply()
    },
    changePrice(event) {
      this.changeIndex = event.target.dataset.index
      this.minimumValue = Math.floor(lf.mult((+this.list[this.changeIndex].goods_price_adjust), (1 - +this.goods_ratio), 100)) / 100
      if (!+this.goods_ratio) {
        this.priceRang = `调价区间0-${this.list[this.changeIndex].goods_price_adjust}`
      } else {
        this.priceRang = `调价区间${this.minimumValue}-${this.list[this.changeIndex].goods_price_adjust}`
      }
      this.changePriceValue = this.list[this.changeIndex].goods_price_adjust
      this.showChangePriceToast = true
      this.$apply()
    },
    onClose () {
      this.showChangePriceToast = false
      this.$apply()
    },
    autoChangePrice (event) {
      let value = +event.detail.value
      this.changePriceValue = value
      this.discountRate = Math.floor(lf.mult((value / this.data.list[this.changeIndex].goods_price_adjust), 10, 100)) / 100
      this.$apply()
    },
    confirmAdjustPeic () {
      if (this.changePriceValue > this.list[this.changeIndex].goods_price_adjust) {
        return lf.toast('不能大于原价')
      }
      if (this.minimumValue > +this.changePriceValue) {
        this.changePriceValue = this.list[this.changeIndex].goods_price
        this.discountRate = Math.floor(lf.mult((this.changePriceValue / this.data.list[this.changeIndex].goods_price_adjust), 10, 100)) / 100
        this.$apply()
        return false
      } else {
        this.showChangePriceToast = false
        this.$apply()
      }
      this.discountMoney = +this.discountMoney + (((this.list[this.changeIndex].goods_price - 0) - (this.changePriceValue - 0)) * this.list[this.changeIndex].num)
      this.isShowTip(this.discountMoney)
      this.discountMoney = this.discountMoney.toFixed(2)
      this.list[this.changeIndex].goods_price = (+this.changePriceValue).toFixed(2)
      this.$apply()
      lf.storage.remove(lf.user.SHOP_KEY)
      lf.storage.set(lf.user.SHOP_KEY, JSON.stringify(this.list))
      this.$apply()
    },
    onNumChange (event) {
      let index = event.currentTarget.dataset.index
      index = this.getIndexById(index)
      let num = +event.detail - +this.list[index].num
      this.list[index].num = event.detail
      let diffPrice = +((+this.list[index].goods_price_adjust - +this.list[index].goods_price) * num)
      this.discountMoney = (+this.discountMoney + diffPrice).toFixed(2)
      this.isShowTip(this.discountMoney)
      this.multSaveList()
    },
    onChange (event) {
      // console.log(event)
      // let id = event.currentTarget.dataset.id
      // console.log(id)
      // let index = this.result.indexOf(id)
      // console.log(this.result.indexOf(id))
      // if (index < 0) {
      //   console.log('进来了')
      //   this.result.push(event.currentTarget.dataset.id)
      // } else {
      //   this.result.splice(index, 1)
      // }
      this.result = event.detail
      if (this.result.length === this.list.length) {
        this.allChecked = true
      } else {
        this.allChecked = false
      }
      this.changeListChecked()
    },
    allChange (event) {
      if (this.result.length === this.list.length) {
        this.result = []
        this.allChecked = false
      } else {
        this.result = this.list.map((v, i) => {
          return v.id
        })
        this.allChecked = true
      }
      this.changeListChecked()
    },
    async goPay () {
      if (!lf.user.isLogin()) {
        wepy.navigateTo({
          url: 'login'
        })
        return
      }
      if (lf.user.getGoodList().length <= 0) {
        return lf.toast('请先加入商品')
      }
      try {
        wepy.navigateTo({
          url: `manager/placeAnOrder`
        })
      } catch (e) {
        lf.toast(e.info || e.toString())
      }
    }
  }
  getIndexById (id) {
    const index = this.list.findIndex(v => {
      return v.id.toString() === id.toString()
    })
    return index
  }

  changeListChecked () {
    this.list.forEach((v, i) => {
      if (this.result.indexOf(v.id) > -1) {
        v.checked = true
      } else {
        v.checked = false
      }
    })
    this.multSaveList()
  }

  multSaveList () {
    if (this.timeEvent) {
      clearTimeout(this.timeEvent)
      this.timeEvent = null
    }
    this.timeEvent = setTimeout(this.saveGoodList.bind(this), 0)
  }

  saveGoodList () {
    lf.user.setGoodList(this.list)
    // this.getGoodList()
  }

  getGoodList () {
    this.list = []
    this.result = []
    this.discountMoney = 0
    const res = lf.user.getGoodList()
    this.list = res
    this.result = []
    this.$apply()
    this.list.forEach((v, i) => {
      if (v.checked) {
        this.discountMoney = (+this.discountMoney + ((+v.goods_price_adjust - +v.goods_price) * +v.num))
        this.result.push(v.id)
      }
    })
    this.isShowTip(this.discountMoney)
    this.discountMoney = this.discountMoney.toFixed(2)
    if (this.result.length === this.list.length && this.result.length !== 0) {
      this.allChecked = true
    } else {
      this.allChecked = false
    }
    this.$apply()
  }

  init () {
    if (lf.user.getOrderTitle(lf.user.getOrderChoose())) {
      wx.setNavigationBarTitle({
        title: lf.user.getOrderTitle(lf.user.getOrderChoose()) + `的购物车`
      })
    }
    this.getGoodList()
    this.getRatio()
  }
  async getRatio() {
    const r = await lf.net.post('/Api/Dealer/goods_ratio')
    if (r.code === 200) {
      this.goods_ratio = r.data.goods_ratio
      this.$apply()
    }
  }
  onLoad () {
    this.isIpx = wepy.$instance.globalData.isIpx
    this.isChangePrice()
  }
  async isChangePrice () {
    const r = await lf.net.post('/api/public/system_config')
    if (r.code === 200) {
      // r.data.change_price_open = 1
      this.change_price_open = r.data.change_price_open || 0
      if (+this.change_price_open === 1) {
        this.rightWidthOp = 120
        this.delGoods = 120
      } else {
        this.rightWidthOp = 60
        this.delGoods = 60
      }
      this.$apply()
    } else {
      lf.toast(r.info)
    }
  }
  isShowTip(discountMoney) {
    let price = +discountMoney
    if (price === 0) {
      this.primaryPrice = false
    } else {
      this.primaryPrice = true
    }
    this.$apply()
  }
  onShow () { }
}
</script>
