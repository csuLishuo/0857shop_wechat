<style lang="scss">
  @import "../css/common";

  .nab-list {
    position: fixed;
    display: flex;
    flex-direction: column;
    bottom: 0;
    left: 0;
    right: 0;
    background: #f7f7f7;
    z-index: 200;
    .nav-bar {
      height: torpx(108);
      display: flex;
      justify-content: center;
      align-items: center;
      .bar-item {
        position: relative;
        flex: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100%;
        image {
          width: torpx(48);
          height: torpx(48);
        }
        text {
          font-size: torpx(22);
          color: #666666;
          padding-top: torpx(6);
        }
        &.active {
          text {
            color: #cf0210;
          }
        }
        .cirle {
          position: absolute;
          width: torpx(94);
          height: torpx(94);
          left: 50%;
          transform: translateX(-50%);
          border-radius: 50%;
          background-color: #cf0210;
          display: flex;
          justify-content: center;
          align-items: center;
          color: #ffffff;
          font-size: torpx(42);
          top: torpx(-35);
          display: flex;
          align-items: center;
          justify-content: center;
          overflow: hidden;
          .add-icon {
            width: torpx(42);
            height: torpx(42);
            border-radius: 50%;
          }
        }
      }
    }
    .fix-iphonex {
      height: torpx(80);
    }
  }
  .lf-nav {
    height: 100vh;
  }
  .lf-nav {
    .van-popup--bottom {
      top: 0 !important;
    }
  }

  .right {
    width: 100%;
    height: 100%;
    z-index: 300 !important;
  }
  .pop-bottom {
    z-index: 300 !important;
  }

  .cd-order {
    height: 100%;
    position: relative;
    background: #f5f5f5;
    .title {
      height: torpx(116);
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .title2 {
      padding: torpx(35) torpx(20);
      position: relative;
      text-align: center;
      .van-icon {
        position: absolute;
        top: 50%;
        left: torpx(8);
        transform: translateY(-50%);
        padding: torpx(8);
      }
    }
    .input-v {
      height: torpx(118);
      margin: 0 torpx(20);
      background: #ffffff;
      display: flex;
      align-items: center;
      input {
        margin-left: torpx(39);
        flex: 1;
        font-size: torpx(32);
      }
      button {
        width: torpx(150);
        height: torpx(88);
        background-color: #cf0210;
        border-radius: torpx(10);
        margin-right: torpx(12);
        color: #ffffff;
        font-size: torpx(32);
        line-height: torpx(88);
      }
    }
    .tip {
      font-size: torpx(24);
      color: #888888;
      margin-top: torpx(21);
      margin-left: torpx(39);
    }
    .order-add {
      background: #ffffff;
      display: flex;
      align-items: center;
      height: torpx(118);
      margin-top: torpx(20);
      margin-bottom: torpx(20);
      .icon {
        font-size: torpx(50);
        color: #2ebc88;
        padding-left: torpx(44);
        padding-right: torpx(38);
      }
      .text {
        color: #333333;
        font-size: torpx(32);
        flex: 1;
      }
    }
    .scroll {
      position: absolute;
      top: torpx(138);
      bottom: 0;
      /*bottom: torpx(194);*/
      width: 100%;
    }
    .order-list {
      .item {
        background: #ffffff;
        display: flex;
        align-items: center;
        height: torpx(118);
        margin-bottom: torpx(20);
        padding: 0 torpx(38);
        .text {
          flex: 1;
          font-size: torpx(32);
          color: #333333;
        }
        .icon {
          color: #bfbfbf;
          image {
            width: torpx(42);
            height: torpx(28);
          }
        }
        &.active {
          .text {
            color: #2ebc88;
          }
          .icon {
            color: #2ebc88;
          }
        }
      }
      .del {
        width: 90px;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #e39f3d;
        color: #ffffff;
        font-size: torpx(28);
        &.red {
          background-color: #f2441c;
          border-radius: torpx(5);
        }
      }
    }
    .bottom {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      padding: torpx(50) 0 torpx(50);
      display: flex;
      justify-content: center;
    }
    .close {
      width: torpx(94);
      height: torpx(94);
      line-height: torpx(94);
      background: #2ebc88;
      color: #fff;
      border-radius: 50%;
    }
  }

  .kd-view {
    position: fixed;
    right: torpx(38);
    width: torpx(100);
    height: torpx(100);
    bottom: torpx(150);
    z-index: 999;
    image {
      width: 100%;
      height: 100%;
      display: block;
    }
  }
</style>
<template>
  <view class="lf-nav">
    <!--<cover-view class="kd-view" wx:if="isLogin" @tap="open">-->
      <!--<cover-image src="../images/kaidan.png"></cover-image>-->
    <!--</cover-view>-->
    <!--<view class="nab-list">-->
      <!--<view class="nav-bar">-->
        <!--<view class="bar-item {{active == 1 ? 'active' : ''}}" @tap="go(1, 'home')">-->
          <!--<image src="../images/icon1.png" wx:if="{{active == 1}}"></image>-->
          <!--<image src="../images/icon1_on.png" wx:else></image>-->
          <!--<text>首页</text>-->
        <!--</view>-->
        <!--<view class="bar-item {{active == 2 ? 'active' : ''}}" @tap="go(2, 'categoryPage')">-->
          <!--<image src="../images/icon2.png" wx:if="{{active == 2}}"></image>-->
          <!--<image src="../images/icon2_on.png" wx:else></image>-->
          <!--<text>分类</text>-->
        <!--</view>-->
        <!--<view class="bar-item center" @tap="open" wx:if="{{role >= 50}}">-->
          <!--<image></image>-->
          <!--<view class="cirle" @tap="open">-->
            <!--<image class="add-icon" src="../images/icon-31.png"></image>-->
          <!--</view>-->
          <!--<text>开单</text>-->
        <!--</view>-->
        <!--<view class="bar-item {{active == 3 ? 'active' : ''}}" @tap="go(3, 'shopCart')">-->
          <!--<image src="../images/icon3.png" wx:if="{{active == 3}}"></image>-->
          <!--<image src="../images/icon3_on.png" wx:else></image>-->
          <!--<text>购物车</text>-->
        <!--</view>-->
        <!--<view class="bar-item {{active == 4 ? 'active' : ''}}" @tap="go(4, 'myCenter')"-->
              <!--wx:if="{{role > 0 || !isLogin || role == 0}}">-->
          <!--<image src="../images/icon4.png" wx:if="{{active == 4}}"></image>-->
          <!--<image src="../images/icon4_on.png" wx:else></image>-->
          <!--<text>我的</text>-->
        <!--</view>-->
      <!--</view>-->
      <!--<view class="fix-iphonex" wx:if="{{isPx}}"></view>-->
    <!--</view>-->
    <view class="cd-order">
      <view class="order-add" @tap="showInput">
        <view class="icon">+</view>
        <view class="text">新建一个单</view>
      </view>
      <view class="order-list scroll">
        <scroll-view scroll-y style="height: 100%;padding: 20rpx;box-sizing: border-box;">
          <block wx:for="{{list}}" wx:for-index="index" wx:for-item="data" wx:key="unique">
            <van-swipe-cell data-index="{{index}}" right-width="{{ 90 }}" async-close bind:close="closeDel"
                            bind:closed="closed">
              <van-cell-group>
                <view class="item {{data.id == activeOrder ? 'active' : ''}}"
                      @tap="chooseOrder({{data.id}}, {{data.name}})">
                  <view class="text">{{data.name}}</view>
                  <view class="icon">
                    <image src="../images/salesman/icon-3.png" wx:if="{{data.id == activeOrder}}"></image>
                    <image src="../images/salesman/icon-2.png" wx:else></image>
                  </view>
                </view>
              </van-cell-group>
              <view slot="right" class="del {{data.del >= 1 ? 'red' : ''}}">{{data.del == 0 ? '删除' : '确定删除'}}</view>
              <!--<view class="del-view" slot="right">-->
              <!--</view>-->
            </van-swipe-cell>
          </block>
        </scroll-view>
      </view>
      <!--<view class="bottom">-->
        <!--<image class="close" src="./../images/icon-1.png" @tap="close"></image>-->
      <!--</view>-->
    </view>
    <van-popup
      custom-class="pop-bottom"
      show="{{ show }}"
      overlay="{{ false }}"
      position="bottom"
      @close="close"
      @click-overlay="close"
    >
      <view class="cd-order">
        <div class="title">出单</div>
        <view class="order-add" @tap="showInput">
          <view class="icon">+</view>
          <view class="text">新建一个单</view>
        </view>
        <view class="order-list scroll">
          <scroll-view scroll-y style="height: 100%;padding: 20rpx;box-sizing: border-box;">
            <block wx:for="{{list}}" wx:for-index="index" wx:for-item="data" wx:key="unique">
              <van-swipe-cell data-index="{{index}}" right-width="{{ 90 }}" async-close bind:close="closeDel"
                              bind:closed="closed">
                <van-cell-group>
                  <view class="item {{data.id == activeOrder ? 'active' : ''}}"
                        @tap="chooseOrder({{data.id}}, {{data.name}})">
                    <view class="text">{{data.name}}</view>
                    <view class="icon">
                      <image src="../images/salesman/icon-3.png" wx:if="{{data.id == activeOrder}}"></image>
                      <image src="../images/salesman/icon-2.png" wx:else></image>
                    </view>
                  </view>
                </van-cell-group>
                <view slot="right" class="del {{data.del >= 1 ? 'red' : ''}}">{{data.del == 0 ? '删除' : '确定删除'}}</view>
                <!--<view class="del-view" slot="right">-->
                <!--</view>-->
              </van-swipe-cell>
            </block>
          </scroll-view>
        </view>
        <view class="bottom">
          <image class="close" src="./../images/icon-1.png" @tap="close"></image>
        </view>
      </view>
    </van-popup>
    <van-popup
      show="{{ showIn }}"
      overlay="{{ false }}"
      position="right"
      custom-class="right"
      @close="close"
      @click-overlay="close"
    >
      <view class="cd-order">
        <view class="title2">
          <van-icon name="arrow-left" class="icon" @tap="closeIn"/>
          新建出单
        </view>
        <view class="input-v">
          <input value="{{value}}" bindinput='onValue' placeholder="请输入一个出单名" focus="{{focus}}"/>
          <button @tap="save">
            保存
          </button>
        </view>
        <view class="tip">
          建议：小区名+客户名，如柠檬丽都李先生
        </view>
      </view>
    </van-popup>
  </view>
</template>
<script>
import wepy from 'wepy'
import lf from 'lf'

export default class Counter extends wepy.component {
  props = {
    active: {
      type: [Number, String],
      default: 1
    }
  }
  data = {
    isPx: false,
    role: '',
    activeOrder: '',
    list: [],
    show: false,
    showCreate: false,
    showIn: false,
    value: '',
    focus: false,
    isLogin: false,
    delCount: 0
  }

  events = {}
  methods = {
    closed (event) {
      const index = event.currentTarget.dataset.index
      const curent = this.list[index]
      if (curent.del !== 0) {
        curent.del = 0
        this.$apply()
      }
    },
    closeDel (event) {
      const index = event.currentTarget.dataset.index
      const curent = this.list[index]
      const {position, instance} = event.detail
      switch (position) {
        case 'left':
        case 'cell':
          curent.del = 0
          instance.close()
          this.$apply()
          break
        case 'right':
          if (curent.del === 0) {
            curent.del++
          } else if (curent.del > 0) {
            curent.del = 0
            instance.close()
            lf.user.delOrder(curent.id)
            this.getKD()
          }
          break
        case 'outside':
          curent.del = 0
          instance.close()
          this.$apply()
          break
      }
      this.$apply()
    },
    go (index, url) {
      if (Number(this.active) === Number(index)) {
        return
      }
      if (Number(index) === 4 && !lf.user.isLogin()) {
        wepy.navigateTo({
          url: 'login'
        })
        return
      }
      wepy.redirectTo({
        url: url
      })
    },
    open () {
      // this.getKD()
      this.show = true
      this.$emit('opened')
    },
    close () {
      this.show = false
      this.$emit('change')
    },
    showInput () {
      this.showIn = true
      setTimeout(() => {
        this.focus = true
        this.$apply()
      }, 500)
    },
    closeIn () {
      this.showIn = false
      this.focus = false
    },
    async save () {
      if (!this.value) {
        wepy.showToast({
          title: '请输入出单名',
          icon: 'none'
        })
        return
      }
      const id = lf.user.addOrder(this.value)
      this.changeOrder(id)
      this.value = ''
      this.showIn = false
      this.focus = false
      this.$apply()
      this.getKD()
    },
    onValue (e) {
      this.value = e.detail.value
    },
    chooseOrder (id) {
      this.changeOrder(id)
    }
  }

  changeOrder (id) {
    this.activeOrder = id
    lf.user.changeOrder(id)
    this.$apply()
    this.getCartNum()
  }
  getCartNum () {
    wepy.$instance.showShopRedDot()
  }
  cdelOrder (id) {
    return lf.net.post('/Api/Order/order_delete', {
      order_id: id
    })
  }

  async getKD () {
    try {
      let l = lf.user.getOrder()
      l = l.filter(v => {
        return v.id !== 'DEFAULT_SHOP_INFO'
      })
      l.forEach(v => {
        v.del = 0
      })
      this.list = l
      this.$apply()
    } catch (e) {
      wepy.showToast({
        title: e.toString(),
        icon: 'none'
      })
    }
  }
  init () {
    this.isPx = wepy.$instance.globalData.isIpx
    if (lf.user.isLogin()) {
      this.isLogin = true
      this.role = lf.user.getRole()
      const choose = lf.user.getOrderChoose()
      if (choose) {
        this.activeOrder = choose
      }
      this.getKD()
      // const o = lf.user.getOder()
      // if (this.role !== 1 && this.role !== 0 && this.role !== 10) {
      //   this.getKD()
      // }
      this.$apply()
    }
  }

  onLoad () {
  }
}
</script>
