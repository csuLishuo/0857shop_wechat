<style lang="scss">
  .viewScorll {
    height: 100%;
  }
  @import "../../css/common";
  page {
    height: 100vmax;
    background-color: #f5f5f5;
  }
  .refundAudit {
    .header {
      padding: torpx(30);
      background-color: white;
      .presonInfo {
        margin-bottom: torpx(30);
        >text {
          font-size: torpx(30);
          color: black;
        }
        .phone {
          margin-left: torpx(30);
          color: #999;
          font-size: torpx(26);
        }
      }
      .address {
        font-size: torpx(26);
        color: #666;
        line-height: torpx(42);
        width: 80%;
      }
    }
    .placeHolder {
      margin-bottom: torpx(20);
      .Pimg {
        width: 100%;
        height: torpx(12);
        display: block;
      }
    }
    .goodsInfo {
      @extend .WarpS;
      .item_goods {
        @extend .item;
      }
      .order_num {
        font-weight: bold;
        height: torpx(90)!important;
      }
      .vanCard {
        padding: torpx(40) 0;
        width: 100%;
        box-sizing: border-box;
        border-bottom: 1px solid #eee;
        .cardWarp {
          display: flex;
          .imgCard {
            display: block;
            width: torpx(150);
            height: torpx(150);
            border: 1px solid #eee;
            border-radius: torpx(10);
            margin-right: torpx(20);
          }
          .contentCard {
            display: flex;
            flex: 1;
            flex-direction: column;
            justify-content: space-between;
            .ti_des {
              .title {
                font-size: torpx(30);
                color: #333;
                font-weight: bold;
                @extend .ellipsis-2
              }
              .des {
                font-size: torpx(24);
                color: #999;
              }
            }
            .goodsI {
              display: flex;
              justify-content: space-between;
              .price {
                font-size: torpx(36);
                color: #cf0210;
                .symbol {
                  font-size: torpx(30);
                }
              }
              .numGoods {
                font-size: torpx(26);
                color: #666;
              }
            }
          }
        }
      }
      .postman {
        .right {
          font-weight: bold;
        }
      }
      .goodsPrice {
        @extend .r
      }
    }
    .refundDetail {
      @extend .WarpS;
      margin-bottom: torpx(42);
      .refund_item {
        @extend .item
      }
      .tite {
        font-weight: bold;
      }
      .refundrenson {
        font-size: torpx(30);
      }
      .refundPrice{
        @extend .r
      }
      .refundVoucher {
        padding-top: torpx(30);
        padding-bottom: torpx(55);
        font-size: torpx(26);
        display: flex;
        justify-content: space-between;
        .voucherImgS {
          .img{
            width: torpx(136);
            height: torpx(136);
            border: 1px dashed #eee;
            border-radius: torpx(10);
            margin-left: torpx(15);
          }
        }
      }
    }
    .btn {
      display: flex;
      font-size: torpx(32);
      color: white;
      text-align: center;
      background-color: black;
      .itemBtn {
        flex: 1;
        height: 100%;
        line-height: torpx(100);
        &:first-child {
          background-color: #d12a35;
        }
        &:nth-child(2) {
          background-color: #cf000e;
        }
        &:last-child {
          background-color: #9d000b;
        }
      }
    }
  }
  .item {
    height: torpx(100);
    display: flex;
    align-items: center;
    font-size: torpx(26);
    border-bottom: 1px solid #eee;
    .left {
      @extend .l
    }
    .right {
      @extend .f
    }
  }
  .WarpS {
    padding: 0 torpx(40);
    box-sizing: border-box;
    background-color: white;
    margin-bottom: torpx(32);
  }
  .l {
    width: torpx(150);
  }
  .r {
    .right{
      color: #cf000e;
      font-size: torpx(30);
      .symbol {
        font-size: torpx(26);
      }
    }
  }
  .f {
    flex: 1;
    text-align: right;
    white-space:normal;
    word-wrap:break-word;
    word-break:break-all;
  }
  .popContent{
    width: torpx(630);
    background: #fff;
    box-sizing: border-box;
    padding: torpx(30);
    border-radius: torpx(12);
    .title{
      font-size: torpx(36);
      line-height: torpx(106);
      text-align: center;
    }
    .input-box{
      border: 1px solid #ddd;
      border-radius: torpx(8);
      box-sizing: border-box;
      padding: torpx(10);
      textarea{
        width: 100%;
        line-height: torpx(52);
        font-size: torpx(32);
        text-align: justify;
        height: torpx(354);
      }
    }
    .btn-box{
      margin: torpx(20) 0 0;
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      justify-content: space-between;
      .btn{
        width: 46%;
        border-radius: torpx(8);
        text-align: center;
        line-height: torpx(90);
        height: torpx(90);
        font-size: torpx(32);
        color: #fff;
        background: #e5e5e5;
        &.confirm{
          background: #e12020;
        }
      }
    }
  }
  .van-popup{
    border-radius: torpx(12);
  }
</style>
<template>
  <scroll-view class="viewScorll" scroll-y="{{ !showPop }}">
    <view class="refundAudit">
      <view class="header">
            <view class="presonInfo">
              <text>收货人：</text><text>{{goodsInfo.order.receiver_name}}</text><text class="phone">{{goodsInfo.order.receiver_mobile}}</text>
            </view>
            <view class="address">
              {{goodsInfo.order.district}}{{goodsInfo.order.addr}}
            </view>
        </view>
      <view class="placeHolder">
        <image src="./../../images/MyOrderStrip.jpg" class="Pimg"></image>
      </view>
      <view class="goodsInfo">
        <view class="item_goods order_num">订单号: {{goodsInfo.order.order_no}}</view>
        <view class="vanCard">
          <view class="cardWarp">
            <image class="imgCard" mode="aspectFit" src="{{goodsInfo.order.order_item_info.goods_cover_url}}"></image>
            <view class="contentCard">
              <view class="ti_des">
                <view class="title">{{goodsInfo.order.order_item_info.goods_title}}</view>
                <view class="des">{{goodsInfo.order.order_item_info.cate_id_text}}</view>
              </view>
              <view class="goodsI">
                <view class="price"><text class="symbol">￥</text><text>{{goodsInfo.order.order_item_info.discount_amount}}</text></view>
                <view class="numGoods"><text>x</text><text>{{goodsInfo.order.order_item_info.number}}</text></view>
              </view>
            </view>
          </view>
        </view>
        <view class="item_goods postman">
          <view class="left">
            配送方式
          </view>
          <view class="right">
            {{goodsInfo.order.is_pickup - 0 === 1 ? '自提' : '免邮 快递'}}
          </view>
        </view>
        <view class="item_goods orderTime">
          <view class="left">
            订单时间
          </view>
          <view class="right">
            {{goodsInfo.order.uptime}}
          </view>
        </view>
        <view class="item_goods goodsPrice">
          <view class="left">
            商品金额
          </view>
          <view class="right">
            <text class="symbol">￥</text>
            <text>{{goodsInfo.order.order_item_info.discount_amount}}</text>
          </view>
        </view>
        <view class="item_goods payMethods">
          <view class="left">
            支付方式
          </view>
          <view class="right">
            微信支付
          </view>
        </view>
      </view>
      <view class="refundDetail">
        <view class="refund_item  tite">
          申请退货详情
        </view>
        <view class="refund_item">
          <view class="left">
            申请时间
          </view>
          <view class="right">
            {{goodsInfo.uptime}}
          </view>
        </view>
        <view class="refund_item refundrenson">
          <view class="left">
            退货理由
          </view>
          <view class="right">
            {{goodsInfo.apply_return_reason}}
          </view>
        </view>
        <view class="refund_item refundPrice">
          <view class="left">
            退款金额
          </view>
          <view class="right">
            <text class="symbol">￥</text>
            <text>{{goodsInfo.apply_amount}}</text>
          </view>
        </view>
        <view class="refund_item">
          <view class="left">
            退款类型
          </view>
          <view class="right">
            <text>{{goodsInfo.return_type_text}}</text>
          </view>
        </view>
        <view class="refund_item">
          <view class="left">
            下单门店
          </view>
          <view class="right">
            {{goodsInfo.order.dealer_name}}
          </view>
        </view>
        <view class="refund_item" wx:if="{{goodsInfo.return_status - 0 >= 30 && goodsInfo.return_type - 0 !== 1}}">
          <view class="left">
            退货单号
          </view>
          <view class="right">
            {{goodsInfo.return_logistics_code}}
          </view>
        </view>
        <view class="refund_item" wx:if="{{goodsInfo.return_status - 0 >= 30 && goodsInfo.return_type - 0 !== 1}}">
          <view class="left">
            物流公司
          </view>
          <view class="right">
            {{goodsInfo.return_logistics_company}}
          </view>
        </view>
        <view class="refund_item">
          <view class="left">
            退款说明
          </view>
          <view class="right">
            {{goodsInfo.apply_return_info}}
          </view>
        </view>
        <view class="refundVoucher">
          <view>退款凭证</view>
          <view class="voucherImgS">
            <block wx:for="{{goodsInfo.apply_return_image_list}}" wx:key="unique">
              <image mode="aspectFit" @tap="preview" data-index="{{index}}" class="img"  src="{{item}}"></image>
            </block>
          </view>
        </view>
      </view>
      <view class="btn"  wx:if="{{goodsInfo.return_status - 0 === 30 }}">
        <view class="itemBtn"  @tap="goToLogistics">查看物流</view>
        <view class="itemBtn" @tap="reject">拒绝退货</view>
        <view class="itemBtn" @tap="agreeGoods">同意退货</view>
      </view>
      <view class="btn"  wx:if="{{goodsInfo.return_status - 0 === 35 }}">
        <view class="itemBtn"  @tap="goToLogistics">查看物流</view>
      </view>
      <view class="btn" wx:if="{{goodsInfo.return_status - 0 === 10}}">
        <view class="itemBtn" style="background-color: #cf000e" @tap="reject">拒绝申请</view>
        <view class="itemBtn" @tap="agreeApply">同意申请</view>
      </view>
      <view wx:if="{{isPx}}" style="height: 80rpx"></view>
    </view>
  </scroll-view>
  <van-popup show="{{ showPop }}" bind:close="onClose">
    <view class="popContent">
      <view class="title">请输入拒绝理由</view>
      <view class="input-box">
        <textarea bindinput="attrInput" fixed="true" value="{{back_return_reason}}" placeholder="请输入拒绝理由"></textarea>
      </view>
      <view class="btn-box">
        <view class="btn" bindtap="onClose">取消</view>
        <view class="btn confirm" bindtap="rejectComfirm">提交</view>
      </view>
    </view>
  </van-popup>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
export default class refundAudit extends wepy.page {
  config = {
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '待审核详情',
    navigationBarTextStyle: 'black',
    usingComponents: {
      'van-card': '/components/vant/card/index',
      'van-popup': '/components/vant/popup/index'
    }
  }
  components = {}
  mixins = []
  data = {
    orderId: null,
    goodsInfo: null,
    showPop: false,
    back_return_reason: '',
    allMoney: 0
  }
  onClose () {
    this.back_return_reason = ''
    this.showPop = false
    this.$apply()
  }
  computed = {}
  events = {}
  onLoad (opt) {
    let { orderId } = opt
    this.orderId = orderId
    this.isPx = this.$parent.globalData.isIpx
    this.$apply()
    this.getOrderDetail()
  }
  preventTouchMove() {}
  onUnload () {
    this.orderId = ''
    this.goodsInfo = null
    this.showPop = false
    this.back_return_reason = ''
    this.allMoney = 0
    this.$apply()
  }
  goToLogistics () {
    wx.navigateTo({
      url: `../logistics?orderId=${this.goodsInfo.order_id}`
    })
  }
  attrInput(e) {
    this.back_return_reason = e.detail.value
    this.$apply()
  }
  preview (e) {
    let { index } = e.currentTarget.dataset
    wx.previewImage({
      urls: this.goodsInfo.apply_return_image_list,
      current: index
    })
  }
  methods = {
    goToGoodsInfo (id) {
      wx.navigateTo({
        url: `./../wineInfo?goodsId=${id}`
      })
    },
    async agreeGoods () {
      const r = await lf.net.post('/Api/Orderreturn/logistics_commit', {
        order_item_id: this.orderId
      })
      if (r.code === 200) {
        this.getOrderDetail()
      }
      lf.toast(r.info)
    },
    async reject () {
      this.showPop = true
      this.$apply()
    },
    async rejectComfirm() {
      this.showPop = false
      lf.showLoading('提交中...')
      let url
      let p = {
        order_item_id: this.orderId
      }
      if (+this.goodsInfo.return_status === 10) {
        url = '/Api/Orderreturn/return_back'
        p.back_return_reason = this.back_return_reason
      } else {
        url = '/Api/Orderreturn/logistics_back'
        p.back_logistics_reason = this.back_return_reason
      }
      const r = await lf.net.post(url, p)
      lf.hideLoading()
      if (r.code === 200) {
        this.getOrderDetail()
      }
      lf.toast(r.info)
    },
    async agreeApply () {
      const r = await lf.net.post('/Api/Orderreturn/return_commit', {order_item_id: this.orderId})
      if (r.code === 200) {
        this.getOrderDetail()
      }
      lf.toast(r.info)
    }
  }
  onShow () {}
  async getOrderDetail () {
    this.goodsInfo = []
    try {
      const r = await lf.net.post('/Api/Orderreturn/return_detail', { order_item_id: this.orderId })
      if (r.code === 200) {
        this.goodsInfo = r.data
        // r.data.order.order_item_info.forEach(item => {
        //   this.allMoney += (+item.discount_amount)
        // })
        this.$apply()
      } else {
        lf.toast(r.info)
      }
    } catch (e) {
      console.log(e)
      lf.toast('系统内部错误')
    }
  }
}
</script>
