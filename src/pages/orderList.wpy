<style lang="scss">
  @import "../css/common";
  page {
    height: 100%;
  }
  .container-order{
    position: relative;
    padding-top: torpx(90);
    box-sizing: border-box;
    .order-item{
      background-color: #fff;
      padding:0 torpx(41) torpx(24) torpx(37);
      margin-top: torpx(20);
      .order_item_list{
        padding-bottom:torpx(20);
        position: relative;
      }
      .order-item-top{
        padding:torpx(33) 0;
        border-bottom:torpx(1) solid #eeeeee;
        font-size: torpx(26);
        color: #000;
        margin-bottom: torpx(34);
      }
      .footer{
        text-align: right;
        border-top:torpx(1) solid #eeeeee;
        padding-top:torpx(25);
        margin-top:torpx(16);
        .total{
          text-align: right;
          font-size: torpx(24);
          color: #999;
          .money{
            color: #cf0210;
            font-size: torpx(18);
            text{
              font-size: torpx(28);
            }
          }
        }
        .order-btn{
          margin-top: torpx(24);
          width: torpx(150);
          height: torpx(60);
          background-color: #ffffff;
          border-radius: torpx(5);
          border:torpx(1) solid  #999999;
          display: inline-block;
          line-height: torpx(60);
          text-align: center;
          color: #999;
          font-size: torpx(24);
          margin-left:torpx(10);
        }
        .pay-btn{
          background-color: #cf000e;
          color: #fff;
          border: none;
        }
        .sure-btn {
          border-color: #d41313;
          color: #d41313;
        }
      }
      .van-card{
        background-color: #fff;
        padding:0;
      }
      .van-card__thumb{
        width:torpx(200);
        height:torpx(200);
        border: torpx(1) solid #eee;
      }
      .van-card__title{
        font-size: torpx(30);
        color: #333;
        line-height: torpx(36);
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp:2;
        -webkit-box-orient: vertical;
      }
      .van-card__desc{
        font-size: torpx(24);
        color: #999;
        padding-bottom:torpx(40);
      }
      .van-card__price{
        font-size: torpx(36);
        color: #cf0210;
      }
      .van-card__num{
        font-size: torpx(26);
        color: #666;
      }
    }
    .order_nav{
      width: 100%;
      height:torpx(90);
      box-sizing: border-box;
      background: #fff;
      position: fixed;
      line-height: torpx(90);
      top: 0;
      left: 0;
      z-index: 100;
      .nav_item {
        float: left;
        height: 100%;
        width: 20%;
        text-align: center;
        box-sizing: border-box;
        color: #333;
        font-size: torpx(28);
        border-bottom: torpx(5) solid transparent;
      }
      .nav_item_checked{
        border-bottom: torpx(5) solid #cf0210;
        color: #cf0210;
      }
    }
    .noData{
      text-align: center;
      font-size: torpx(36);
      padding-top:torpx(30);
    }
  }
  .xcontainer-order{
    padding-bottom: torpx(80);
  }
  .go-estimate {
    color: #cf0210 !important;
    border-color:#cf0210!important;
  }
</style>
<template>
  <view class="container-order {{isPx ? 'xcontainer-order' : ''}}">
    <view class="order_nav">
      <block wx:for="{{navStatus}}" wx:for-item="item" wx:for-index="index" wx:key="unique">
        <view class="nav_item {{item.id===tapStauts ? 'nav_item_checked': ''}}" bindtap="changeNav" data-navId="{{item.id}}">
          <view>{{item.text}}</view>
        </view>
      </block>
    </view>
    <scroll-view scroll-y="true" class="scrollView" style="height: 100%">
      <view wx:if="{{orderList.length>0 && tapStauts!==0}}" class="order_list">
        <block wx:for="{{orderList}}" wx:for-index="index" wx:for-item="item" wx:key="unique">
          <view class="order-item">
            <view class="order-item-top clearfix">
              <view style="float: left">订单号: <text>{{item.order_no}}</text></view>
              <view style="float: right;color: #f13d4d;">{{item.order_status_text}}</view>
            </view>
            <view wx:for="{{item.order_item_list}}" wx:for-index="i" wx:for-item="list" wx:key="unique" class="order_item_list" bindtap="toDetails({{item.id}}, {{item.order_status}})">
              <van-card
                num="{{list.number}}"
                price="{{list.amount}}"
                desc="{{list.goods_cate}}"
                title="{{list.goods_title}}"
                thumb="{{ list.goods_cover_url }}"
              >
              </van-card>
            </view>
            <view class="footer">
              <view class="total">共 <text>{{item.goods_number}}</text>件商品，邮费￥ <text>{{item.is_pickup == '1'? '0': item.delive_amount}}</text>，实付 <text class="money">￥ <text>{{item.order_amount}}</text></text></view>
              <block wx:if="{{item.return_status == 0}}">
                <form wx:if="{{item.order_status == 20}}" report-submit bindsubmit="remindDeliver" data-orderId={{item.id}}>
                  <button class="order-btn" form-type="submit" >提醒发货</button>
                </form>
                <button class="order-btn" wx:if="{{item.order_status == 20 || item.order_status == 30}}" bindtap="toLogistics({{item.id}})">查看物流</button>
                <button class="order-btn" wx:if="{{item.order_status == 20 || item.order_status == 30 || item.order_status == 50 }}" bindtap="toDetails({{item.id}}, {{item.order_status}})">查看详情</button>
                <button class="order-btn" wx:if="{{item.order_status == 10}}" bindtap="deleteOrder({{item.id}}, {{index}})">删除订单</button>
                <block wx:if="{{item.is_pickup != 1}}">
                  <button class="order-btn sure-btn" wx:if="{{item.order_status == 30}}" bindtap="sureGetGoods({{index}})">确认收货</button>
                </block>
                <button class="order-btn pay-btn" wx:if="{{item.order_status == 10}}" bindtap="toDetails({{item.id}}, {{item.order_status}})">立即付款</button>
                <button class="order-btn go-estimate" wx:if="{{item.order_status == 60}}" bindtap="goEstimate({{index}}, {{item.order_item_list[0].is_evaluation}})">已评价</button>
                <button class="order-btn go-estimate" wx:if="{{item.order_status == 50}}" bindtap="goEstimate({{index}}, {{item.order_item_list[0].is_evaluation}}, 'p')">去评价</button>
              </block>
            </view>
          </view>
        </block>
      </view>
      <view wx:else class="noData" style="color: #999">暂无数据</view>
    </scroll-view>
  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
import CommonMixin from '../mixins/common'
import { onEvent, EVENT, TYPES } from '../js/event'
export default class Orderlist extends wepy.page {
  config = {
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '我的订单',
    navigationBarTextStyle: 'black',
    usingComponents: {
      'van-card': '/components/vant/card/index'
    }
  }
  mixins = [CommonMixin]
  components = {}
  data = {
    navStatus: [
      {
        id: -1,
        text: '全部',
        pageStart: 1
      },
      {
        id: 10,
        text: '待付款',
        pageStart: 1
      },
      {
        id: 20,
        text: '待发货',
        pageStart: 1
      },
      {
        id: 30,
        text: '待收货',
        pageStart: 1
      },
      {
        id: 50,
        text: '已收货',
        pageStart: 1
      }
    ],
    tapStauts: -1,
    orderList: [],
    ind: null,
    page_start: null,
    isRemindDeliver: false
  }
  computed = {}
  remindDeliver (e) {
    if (!this.isRemindDeliver) {
      this.isRemindDeliver = true
      this.$apply()
      let orderId = e.currentTarget.dataset.orderid
      let formId = e.detail.formId
      lf.net.post('/Api/order/logistics_notice', {form_id: formId, order_id: orderId}).then(res => {
        this.isRemindDeliver = false
        this.$apply()
        lf.toast(res.info)
      })
    }
  }
  methods = {
    goDetail (id) {
      wepy.navigateTo({
        url: `wineInfo?goodsId=${id}`
      })
    },
    toDetails (id, status) {
      let index = this.orderList.findIndex(v => {
        return id === v.id
      })
      this.page_start = null
      let url = +status === 10 ? `myOrderInfo?orderId=${id}&indx=${index}&tap=${this.tapStauts}` : `returns/refundDetail?orderId=${id}`
      wepy.navigateTo({
        url
      })
    },
    toLogistics(id) {
      wx.navigateTo({
        url: `logistics?orderId=${id}`
      })
    },
    sureGetGoods (index) {
      wx.showModal({
        title: '提示',
        content: '确认收货？',
        success: async res => {
          if (res.confirm) {
            const r = await lf.net.post('/Api/Order/customers_logistics_commit', {
              order_id: this.orderList[index].id
            })
            if (r.code === 200) {
              this.getOrderList(this.tapStauts)
            } else {
              lf.toast(r.info)
            }
          }
        }
      })
    },
    async deleteOrder (id, index) {
      try {
        const r = await lf.net.post('/Api/order/order_delete', {
          order_id: id
        })
        if (r.code === 200) {
          wepy.showToast({
            title: '删除成功',
            icon: 'none'
          })
          this.orderList.splice(index, 1)
          this.$apply()
        }
      } catch (e) {
        wepy.showToast({
          title: e.toString(),
          icon: 'none'
        })
      }
    },
    goEstimate(index, status, p) {
      let url
      if (p === 'p') {
        url = `estimate?status=${status}&goods=${JSON.stringify(this.orderList[index].order_item_list)}&orderId=${this.orderList[index].id}&tap=${this.tapStauts}&index=${index}`
      } else {
        for (let i = 0; this.orderList[index].order_item_list.length; i++) {
          if (+this.orderList[index].order_item_list[i].is_evaluation === 1) {
            status = 1
            break
          }
        }
        url = `estimate?status=${status}&goods=${JSON.stringify(this.orderList[index].order_item_list)}&orderId=${this.orderList[index].id}`
      }
      wx.navigateTo({
        url
      })
    }
  }
  events = {}

  onLoad (option) {
    if (option.tab === '' || Number(option.tab) === 0) {
      this.tapStauts = -1
    } else {
      this.tapStauts = Number(option.tab)
    }
    this.navStatus.forEach(v => {
      v.pageStart = 1
    })
    this.getOrderList(this.tapStauts)
  }

  onShow () {
    onEvent(EVENT.ORDER, (e) => {
      switch (e.type) {
        case TYPES.ORDER_STATUS_CHANGES:
          const changeId = e.data
          const index = this.orderList.findIndex(v => {
            return changeId === v.id
          })
          if (index > -1) {
            this.orderList.splice(index, 1)
          }
          break
        case TYPES.ORDER_ALL_DELECT_CHANGES:
          const id = e.data
          const inx = this.orderList.findIndex(v => {
            return id === v.id
          })
          if (inx > -1) {
            this.orderList.splice(inx, 1)
          }
          break
        case TYPES.ORDER_PASS_CHANGES:
          this.page_start = e.data
          this.ind = e.data //  索引号
          this.$apply()
          this.getOrderList(this.tapStauts)
          break
      }
    })
  }
  changeNav(event) {
    this.navStatus.forEach(v => {
      v.pageStart = 1
    })
    this.orderList = []
    this.ind = null
    let navId = event.currentTarget.dataset.navid
    if (navId === this.tapStauts) {
      return
    }
    var id = navId
    if (navId === -1) {
      id = ''
    }
    this.tapStauts = navId
    this.getOrderList(id)
    this.$apply()
  }
  async getOrderList(status = '') {
    try {
      var pageStart
      switch (Number(this.tapStauts)) {
        case -1:
          pageStart = this.navStatus[0].pageStart
          break
        case 10:
          pageStart = this.navStatus[1].pageStart
          break
        case 20:
          pageStart = this.navStatus[2].pageStart
          break
        case 30:
          pageStart = this.navStatus[3].pageStart
          break
        case 50:
          pageStart = this.navStatus[4].pageStart
          break
        default:
      }
      let param = {
        order_status: status,
        mid: lf.storage.get('mid'),
        page_start: this.page_start || (pageStart - 1) * 10,
        page_size: 10
      }
      if (status === '' || status === -1) {
        delete param.order_status
      }
      const result = await lf.net.post('/Api/Order/order_list', param)
      this.page_start = null
      if (result.code === 200) {
        var dataLi = result.data.list || []
        if (dataLi && dataLi.length > 0) {
          result.data.list.forEach(item => {
            if (+item.is_pickup === 0) {
              item.order_amount = +item.order_amount + +item.delive_amount
            }
          })
        }
        if (this.ind && dataLi.length > 0) {
          dataLi.forEach(item => {
            if (+this.orderList[Number(this.ind)].id === +item.id) {
              this.orderList.splice(this.ind, 1, item)
            }
          })
          // this.ind = null
          this.$apply()
          return false
        }
        if (pageStart === 1) {
          this.orderList = dataLi
        } else {
          for (let i = 0; i < dataLi.length; i++) {
            this.orderList.push(dataLi[i])
          }
        }
        this.$apply()
      }
    } catch (e) {
      console.log(e)
      wx.showToast({
        title: '发生了错误',
        icon: 'none',
        mask: true
      })
    }
    wepy.hideLoading()
  }
  more() {
    wepy.showLoading({
      title: '加载中...'
    })
    switch (Number(this.tapStauts)) {
      case -1:
        this.navStatus[0].pageStart += 1
        break
      case 10:
        this.navStatus[1].pageStart += 1
        break
      case 20:
        this.navStatus[2].pageStart += 1
        break
      case 30:
        this.navStatus[3].pageStart += 1
        break
      case 50:
        this.navStatus[4].pageStart += 1
        break
      default:
    }
    this.getOrderList(this.tapStauts)
    wepy.stopPullDownRefresh()
  }
  onReachBottom () {
    this.more()
  }
  onPullDownRefresh () {
    this.orderList = []
    this.navStatus.forEach(item => {
      item.pageStart = 1
    })
    this.getOrderList(this.tapStauts)
  }
}
</script>
