<style lang="scss">
  @import "../css/common";

  .sc-container {
    position: relative;
    height: 100vh;
    .fiter-view {
      height: torpx(90);
      display: flex;
      align-items: center;
      background: #ffffff;
      padding: 0 torpx(50);
      font-size: torpx(30);
      .filter {
        display: flex;
        align-items: center;
        height: 100%;
      }
      text {
        margin-right: torpx(30);
      }
    }
    .store-view {
      position: absolute;
      top: torpx(90);
      left: 0;
      right: 0;
      bottom: 0;
      padding-top: torpx(20);
    }
    .list {
      position: relative;
      background: #ffffff;
      .item {
        position: relative;
        display: flex;
        flex-direction: row;
        padding-top: torpx(20);
        padding-bottom: torpx(30);
        padding-left: torpx(30);
        padding-right: torpx(30);
        &:after {
          content: ' ';
          position: absolute;
          bottom: 0;
          height: 1px;
          background: #EEEEEE;
          left: torpx(30);
          right: torpx(30);
        }
        image {
          width: torpx(150);
          height: torpx(170);
          border-radius: torpx(5);
        }
        .right {
          display: flex;
          flex-direction: column;
          margin-left: torpx(25);
          padding-top: torpx(15);
          flex: 1;
          .top {
            display: flex;
            flex-direction: row;
            width: 100%;
          }
          .name {
            color: #333333;
            font-size: torpx(38);
            flex: 1;
          }
          .jl {
            text-align: right;
            color: #666666;
            font-size: torpx(28);
          }
          .address {
            color: #666666;
            font-size: torpx(28);
          }
        }
      }
    }
    .pop-view {
      position: relative;
      height: torpx(800);
      background: #ffffff;
      border-top: 1px solid #EEEEEE;
      .i {
        font-size: torpx(32);
        height: torpx(70);
        line-height: torpx(70);
        color: #000;
        padding: 0 20px;
        &.active {
          color: #d10000;
        }
        &.m {
          display: flex;
          align-items: center;
          .addr {
            flex: 1;
            color: #666666;
            margin-left: torpx(20);
            text-align: right;
          }
        }
      }
      .tabs {
        height: torpx(90);
        display: flex;
        flex-direction: row;
      }
      .tab {
        position: relative;
        margin: 0 torpx(20);
        align-items: center;
        font-size: torpx(28);
        line-height: torpx(90);
        &.active:after {
          content: ' ';
          position: absolute;
          bottom: 0;
          height: 2px;
          background: #d10000;
          width: torpx(75);
          left: 50%;
          transform: translateX(-50%);
        }
      }
      .citys-view {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
      }
      .van-tabs--line .van-tabs__wrap {
        height: torpx(90);
      }
      .van-tab {
        flex: none;
        height: 100%;
        padding: 0 torpx(15);
        color: #333333;
      }
      .van-tabs--line {
        position: absolute;
        top: 0;
        bottom: 0;
        right: 0;
        left: 0;
      }
      .tab__pane {
        position: relative;
        height: 100%;
        height: torpx(710);
      }
    }
  }
  .tripList_root {
        top:0px;
        left: 0px;
        width: 100%;
        height: 100%;
        overflow: hidden;
        position: fixed;
        z-index: 0;
}
</style>
<template>
  <view class="sc-container {{show?'tripList_root':''}}">
    <view class="fiter-view">
      <view class="filter" @tap="open">
        <text class="{{show ? 'active': ''}}">{{areaShowText}}</text>
        <van-icon
          name="arrow-up"
          size="16px"
          color="#f23030"
          wx:if="{{show}}"
        />
        <van-icon
          name="arrow-down"
          size="12px"
          wx:else
        />
      </view>
    </view>
    <scroll-view
      class="store-view"
      scroll-y="{{isScroll}}"
      bindscrolltolower="onBottom"
    >
      <view class="list">
        <block wx:for="{{list}}">
          <view class="item" @tap="chooseStore({{index}})">
            <image src="{{item.dealer_cover_text}}"></image>
            <view class="right">
              <view class="top">
                <view class="name">{{item.dealer_company}}</view>
                <view class="jl">{{item.d_text}}</view>
              </view>
              <view class="address ellipsis-2">{{item.dealer_address}}</view>
            </view>
          </view>
        </block>
      </view>
    </scroll-view>
    <van-popup
      show="{{ show }}"
      bind:close="onClose"
      position="top"
      custom-style="top: 90rpx"
      overlay-style="top: 90rpx"
    >
      <view class="pop-view">
        <van-tabs
          color="#d10000"
          active="{{ tabActive }}"
          animated="{{true}}"
          bind:change="onTabChange"
        >
          <van-tab
            tab-class="test"
            title="{{areaChooseText[0] ? areaChooseText[0] : '请选择'}}"
          >
            <scroll-view
              class="citys-view"
              scroll-y
            >
              <view class="l">
                <view class="i m ellipsis-1" @tap="chooseMy">
                  <view class="label">
                    我的位置
                  </view>
                  <view class="addr">
                    {{myAddress}}
                  </view>
                </view>
                <block wx:for="{{provinceList}}">
                  <view class="i {{areaChooseCode[0] === item.code ? 'active' : ''}}" @tap="choose({{item.code}}, {{item.text}})">
                    {{item.text}}
                  </view>
                </block>
              </view>
            </scroll-view>
          </van-tab>
          <van-tab
            title="{{areaChooseText[1] ? areaChooseText[1] : '请选择'}}"
            wx:if="{{cityList.length > 0}}"
          >
            <scroll-view
              class="citys-view"
              scroll-y
            >
              <view class="l">
                <view class="i m ellipsis-1" @tap="chooseMy">
                  <view class="label">
                    我的位置
                  </view>
                  <view class="addr">
                    {{myAddress}}
                  </view>
                </view>
                <view class="i {{areaChooseCode[1] === -1 ? 'active' : ''}}" @tap="choose({{-1}}, {{'全部'}})">
                  全部
                </view>
                <block wx:for="{{cityList}}">
                  <view class="i {{areaChooseCode[1] === item.code ? 'active' : ''}}" @tap="choose({{item.code}}, {{item.text}})">
                    {{item.text}}
                  </view>
                </block>
              </view>
            </scroll-view>
          </van-tab>
          <van-tab
            title="{{areaChooseText[2] ? areaChooseText[2] : '请选择'}}"
            wx:if="{{countyList.length > 0}}"
          >
            <scroll-view
              class="citys-view"
              scroll-y
            >
              <view class="l">
                <view class="i m ellipsis-1" @tap="chooseMy">
                  <view class="label">
                    我的位置
                  </view>
                  <view class="addr">
                    {{myAddress}}
                  </view>
                </view>
                <view class="i {{areaChooseCode[2] == -1 ? 'active' : ''}}" @tap="choose({{-1}}, {{'全部'}})">
                  全部
                </view>
                <block wx:for="{{countyList}}">
                  <view class="i {{areaChooseCode[2] === item.code ? 'active' : ''}}" @tap="choose({{item.code}}, {{item.text}})">
                    {{item.text}}
                  </view>
                </block>
              </view>
            </scroll-view>
          </van-tab>
        </van-tabs>
      </view>
    </van-popup>
  </view>
</template>

<script>
import QQMapWX from '@/js/qqmap-wx-jssdk.min.js'
import wepy from 'wepy'
import lf from 'lf'
import commonMixin from '../mixins/common'
import areaList from '../data/areaList'

export default class StoreChoose extends wepy.page {
  config = {
    navigationBarTitleText: '选择门店',
    usingComponents: {
      'van-area': '/components/vant/area/index',
      'van-popup': '/components/vant/popup/index',
      'van-icon': '/components/vant/icon/index',
      'van-tab': '/components/vant/tab/index',
      'van-tabs': '/components/vant/tabs/index'
    }
  }
  mixins = [commonMixin]
  data = {
    qqmapsdk: null,
    areaList: areaList,
    provinceList: [],
    cityList: [],
    countyList: [],
    adInfo: null,
    myAddress: '',
    isScroll: true,
    show: false,
    areaChooseCode: [],
    areaChooseText: [],
    tabActive: -1,
    pageNo: 0,
    pageSize: 10,
    list: [],
    loadMore: true,
    areaShowText: '',
    adcode: '',
    loc: {}
  }

  computed = {
    // areaShowText () {
    //   if (this.areaChooseText.length <= 0) {
    //     return '请选择'
    //   }
    //   const [p, city = '', county = ''] = this.areaChooseText
    //   return p + city + county
    // }
  }

  methods = {
    open () {
      this.show = !this.show
      this.isScroll = !this.show
      if (this.tabActive === -1) {
        setTimeout(() => {
          this.tabActive = 0
          this.$apply()
        }, 0)
      }
    },
    onClose () {
      this.show = false
      this.isScroll = !this.show
    },
    onTabChange (event) {
      this.tabActive = event.detail.index
    },
    chooseStore (index) {
      lf.user.setStore(this.list[index])
      wepy.navigateBack()
      // fireEvent(EVENT.ORDER, {
      //   type: TYPES.ORDER_STORE_CHANGES,
      //   data: this.list[index]
      // })
    },
    onBottom () {
      if (this.loadMore) {
        this.getList()
      }
    },
    chooseMy () {
      lf.log.info('chooseMy')
      this.areaShowText = this.myAddress
      this.pageNo = 0
      this.adcode = ''
      this.getList()
      this.show = false
    },
    choose (code, text) {
      lf.log.info('code, text', code)
      switch (this.tabActive) {
        case 0:
          this.areaChooseCode[0] = code
          this.areaChooseText[0] = text
          this.areaChooseCode[1] = ''
          this.areaChooseText[1] = ''
          this.areaChooseCode[2] = ''
          this.areaChooseText[2] = ''
          this.setCitys(code)
          break
        case 1:
          this.areaChooseCode[1] = code
          this.areaChooseText[1] = text
          this.areaChooseCode[2] = ''
          this.areaChooseText[2] = ''
          if (code === -1) {
            this.pageNo = 0
            this.areaShowText = `${this.areaChooseText[0] || ''}`
            this.adcode = this.areaChooseCode[0]
            this.countyList = []
            this.getList()
            this.show = false
          } else {
            this.setCountys(code)
          }
          break
        case 2:
          this.areaChooseCode[2] = code
          this.areaChooseText[2] = text
          this.show = false
          if (code === -1) {
            this.pageNo = 0
            this.areaShowText = `${this.areaChooseText[0] || ''}${this.areaChooseText[1] || ''}`
            this.adcode = this.areaChooseCode[1]
          } else {
            this.adcode = code
            this.areaShowText = `${this.areaChooseText[0] || ''}${this.areaChooseText[1] || ''}${this.areaChooseText[2] || ''}`
          }
          this.getList()
          this.show = false
          break
      }
    }
  }

  events = {}

  setCitys (code) {
    if (this.countyList.length > 0) {
      this.countyList = []
    }
    this.cityList = []
    const s = code.toString().substr(0, 3)
    const list = this.areaList.city_list
    for (let code in list) {
      if (code.indexOf(s) === 0) {
        this.cityList.push({
          code,
          text: list[code]
        })
      }
    }
    this.tabActive = 1
  }
  setCountys (code) {
    this.countyList = []
    const s = code.toString().substr(0, 3)
    const list = this.areaList.county_list
    for (let code in list) {
      if (code.indexOf(s) === 0) {
        this.countyList.push({
          code,
          text: list[code]
        })
      }
    }
    this.tabActive = 2
  }
  reverseGeocoder (lat, log) {
    return new Promise((resolve, reject) => {
      lf.log.info('2.5')
      this.qqmapsdk.reverseGeocoder({
        location: {
          latitude: lat,
          longitude: log
        },
        success: function (addressRes) {
          lf.log.info('2.6')
          resolve(addressRes)
        },
        fail: function (e) {
          reject(e)
        }
      })
    })
  }

  getPage (pageNo, pageSize) {
    return {
      page_start: (pageNo - 1) * pageSize,
      page_size: pageSize
    }
  }

  async getList () {
    try {
      this.pageNo++
      const {latitude, longitude} = this.loc
      // let latitude = ''
      // let longitude = ''
      const adcode = this.adcode
      // if (this.adInfo) {
        // const {lat, lng} = this.adInfo.location
        // latitude = lat
        // longitude = lng
      // }
      const res = await lf.net.post('/Api/Dealer/dealer_list', {
        adcode,
        latitude,
        longitude,
        ...this.getPage(this.pageNo, this.pageSize)
      })
      if (res.code !== 200) {
        lf.toast(res.info)
        return
      }
      if (this.pageNo === 1) {
        this.list = res.data.list || []
      } else {
        this.list = this.list.concat(res.data.list || [])
      }
      let num = +res.data.num || 0
      if (this.pageNo * this.pageSize >= num) {
        this.loadMore = false
      } else {
        this.loadMore = true
      }
      this.$apply()
    } catch (e) {
      console.error(e)
      lf.toast(e.info ? e.info : e.toString())
    }
  }

  async initArea () {
    lf.showLoading('获取位置中...')
    this.qqmapsdk = new QQMapWX({
      key: 'LYOBZ-CBRRX-YN24R-T63XL-V3433-X7F5J'
    })
    try {
      const res = await wepy.getLocation({
        type: 'gcj02'
      })
      this.loc = res
      const addr = await this.reverseGeocoder(res.latitude, res.longitude)
      lf.log.info('33333')
      if (addr.status === 0) {
        const result = addr.result
        this.myAddress = result.address
        this.areaShowText = this.myAddress
        this.adInfo = result.ad_info
      }
      this.$apply()
      lf.hideLoading()
    } catch (e) {
      console.error(e)
      lf.hideLoading()
      lf.toast('定位出错')
    }
  }

  async init () {
    lf.log.info('111111111')
    const list = areaList.province_list
    for (let code in list) {
      this.provinceList.push({
        code,
        text: list[code]
      })
    }
    lf.log.info('2222222')
    this.pageNo = 0
    this.loadMore = true
    await this.initArea()
    lf.log.info('44444')
    this.getList()
    lf.log.info('55555')
  }

  onShow () {
    this.init()
  }
  onLoad () {
  }
}
</script>
