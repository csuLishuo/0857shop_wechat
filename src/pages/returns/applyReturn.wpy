<style lang="scss">
  @import "../../css/common";
  .container {
    display: flex;
    justify-content: flex-start;
    width: 100%;
    align-items: center;
    flex-direction: column;
    font-size: torpx(30);
    margin-bottom: torpx(80);
    .wine-list {
      display: flex;
      justify-content: flex-start;
      align-items: center;
      flex-direction: column;
      width: 100%;
      height: 100px;
      background-color: #fff;
      .wine-item {
        display: flex;
        justify-content: space-around;
        align-items: center;
        width: 100%;
        height: 100%;
        flex-direction: row;
        .wine-img {
          width: 80px;
          height: 80px;
          display: flex;
          justify-content: center;
          align-items: center;
          background-color: #ffffff;
          border: solid torpx(1) #eeeeee;
          image {
            width: 100%;
            height: 100%;
          }
        }
        .wine-desc {
          display: flex;
          justify-content: flex-start;
          align-items: flex-start;
          flex-direction: column;
          width: torpx(500);
          height: 100%;
          padding-top: torpx(40);
          .wine-name {
            font-size: torpx(28);
            word-break:break-all;
            overflow: hidden;
            text-overflow:ellipsis;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            letter-spacing: torpx(2);
          }
          .wine-type {
            margin-top: torpx(20);
            font-size: torpx(24);
            color: #999999;
          }
        }
      }
    }
    .return-list {
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      width: 100%;
      .row-item {
        width: 100%;
        height: torpx(88);
        margin-top: torpx(20);
        background-color: #fff;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        color: #1c1c1c;
        border-top: 1rpx solid #eee;
        .return-babel {
          margin-left: torpx(20);
        }
        .choose-tip {
          display: flex;
          justify-content: flex-end;
          align-items: center;
          color: #999999;
          image {
            margin-left: torpx(15);
            margin-right: torpx(20);
            width: torpx(18);
            height: torpx(30);
          }
        }
        .right-show {
          display: flex;
          align-items: center;
          justify-content: flex-start;
          width: torpx(580);
          .money {
            color: #cf000e;
          }
          .note-input {
            display: flex;
            justify-content: flex-start;
            align-items: center;
            width: 100%;
          }
        }
      }
      .row-item-last {
        display: flex;
        flex-direction: column;
        width: 100%;
        margin-top: torpx(20);
        background-color: #fff;
        padding-bottom: torpx(30);
        .return-babel {
          height: torpx(88);
          line-height: torpx(88);
          margin-left: torpx(20);
        }
        .bottom-evidence {
          width: torpx(200);
          height: torpx(200);
          border: dashed torpx(3) #dddddd;
          display: flex;
          align-items: center;
          flex-direction: column;
          font-size: torpx(24);
          color: #999;
          justify-content: space-around;
          margin-left: torpx(20);
          image {
            margin-bottom: torpx(12);
            width: torpx(72);
            height: torpx(64);
          }
        }
        .des_Img {
          display: flex;
          margin-left: torpx(20);
          .no_image {
            @extend .imgS;
            display: flex;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            .noImg {
              width: torpx(72);
              height: torpx(64);
              margin-bottom: torpx(10);
            }
            .txt {
              font-size: torpx(24);
              color: #848484;
            }
          }
          .imgItemS {
            position: relative;
            @extend .imgS;
            &:last-child {
              margin-right: torpx(0) !important;
            }
            .img_s {
              width: 100%;
              height: 100%;
              border-radius: torpx(5);
            }
            .delet-img {
              width: torpx(30);
              height: torpx(30);
              position: absolute;
              top: torpx(-15);
              right: torpx(-12);
            }
          }
          .C_image {
            @extend .imgS;
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            .cImg {
              width: torpx(44);
              height: torpx(36);
              margin-bottom: torpx(12);
            }
            .nTxt {
              color: #848484;
              font-size: torpx(24);
            }
          }
          .restrict {
            font-size: torpx(24);
            color: #848484;
            align-self: flex-end;
            flex: 1;
            text-align: right;
            padding-right: torpx(18);
          }
        }
      }
    }
    .submit-apply {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      height: torpx(98);
      font-size: torpx(32);
      background-color: #cf000e;
      line-height: torpx(98);
      text-align: center;
      color: #fff;
    }
    .imgS {
      width: torpx(200);
      height: torpx(200);
      border: 1px dashed #cccccc;
      border-radius: torpx(5);
      margin-right: torpx(30);
    }
  }
</style>
<template>
  <view class="container ">
    <view class="wine-list">
      <view class="wine-item">
        <view class="wine-img">
          <image mode="aspectFit" src="{{good.goods_cover_url}}"></image>
        </view>
        <view class="wine-desc">
          <view class="wine-name">{{good.goods_title}}</view>
          <view class="wine-type">{{good.goods_cate}}</view>
        </view>
      </view>
    </view>
    <view class="return-list">
      <view class="row-item"  wx:if="{{applyType === 2}}">
        <view class="return-babel">
          货物状态
        </view>
        <view class="choose-tip" wx:if="{{!confirmStatus}}" @tap="toShowStatus('status')">
          <view class="choose-txt">请选择</view>
          <image src="../../images/icon-8.png"></image>
        </view>
        <view class="right-show" wx:else @tap="toShowStatus('status')">
          <view class="choose-txt">{{confirmStatus}}</view>
        </view>
      </view>
      <view class="row-item"  >
        <view class="return-babel">
          退款原因
        </view>
        <view class="choose-tip" wx:if="{{!confirmReason}}" @tap="toShowStatus('reason')">
          <view class="choose-txt">请选择</view>
          <image src="../../images/icon-8.png"></image>
        </view>
        <view class="right-show" wx:else @tap="toShowStatus('reason')">
          <view class="choose-txt">{{confirmReason}}</view>
        </view>
      </view>
      <view class="row-item" >
        <view class="return-babel">
          退款金额:
        </view>
        <view class="right-show">
          <view class="money">¥{{fee}}</view>
        </view>
    </view>
      <view class="row-item" >
        <view class="return-babel">
          退款说明:
        </view>
        <view class="right-show">
          <input class="note-input" name="note" type="text" value="{{note}}" bindinput='onBindNote' placeholder="选填"/>
        </view>
  </view>
      <view class="row-item-last">
        <view class="return-babel">
          上传凭证
        </view>
          <!--<view class="bottom-evidence">-->
            <!--<image src="../../images/icon-8.png"></image>-->
            <!--<view>上传凭证</view>-->
            <!--<view>(最多三张)</view>-->
          <!--</view>-->
        <view class="des_Img">
          <view class="no_image" bindtap="uploadImg" wx:if="{{img.length === 0}}">
            <image class="noImg" src="../../images/return/photo.png"></image>
            <view>上传凭证</view>
            <view>(最多三张)</view>
          </view>
          <block wx:for="{{img}}" wx:key="unique">
            <view class="imgItemS">
              <image mode="aspectFit" class="img_s" bindtap="previewImg({{index}})" src="{{item}}"></image>
              <image class="delet-img" src="./../../images/delet_image.png" catchtap="delImg({{index}})"></image>
            </view>
          </block>
          <view class="C_image" bindtap="uploadImg" wx:if="{{img.length > 0 && img.length < 3}}">
            <image class="cImg" src="./../../images/no_image.png"></image>
            <view class="nTxt">
              <text>{{img.length}}</text><text>/3</text>
            </view>
          </view>
        </view>
      </view>
    </view>
    <view class="submit-apply" @tap="onSubmit">
      提交
    </view>
    </view>
  <van-popup
  show="{{ showReason || showStatus }}"
  position="bottom"
  bind:close="onClose"
>
    <van-picker wx:if="{{showReason}}" columns="{{ reasons }}" bind:change="onStatusChange" show-toolbar="true"  bind:cancel="onClose" @confirm="showStatusConfirm('reason')"/>
    <van-picker wx:if="{{showStatus}}" columns="{{ statuss }}" bind:change="onStatusChange" show-toolbar="true"  bind:cancel="onClose" @confirm="showStatusConfirm('status')"/>
</van-popup>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
import navbar from '../../components/navbar'
// import { SERVER_BAS_URL } from '../js/define'
import commonMixin from '../../mixins/common'

export default class ApplyReturn extends wepy.page {
  config = {
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '申请退货',
    navigationBarTextStyle: 'black',
    usingComponents: {
      'van-popup': '/components/vant/popup/index',
      'van-picker': '/components/vant/picker/index'
    }
  }
  components = {
    navbar
  }
  mixins = [commonMixin]
  data = {
    showReason: false,
    good: '',
    reasons: {},
    imgCount: 3,
    confirmReason: '',
    confirmStatus: '',
    chooseReasonIndex: 0,
    chooseStatusIndex: 0,
    isSuccess: true,
    img: [],
    imgPath: [],
    showStatus: false,
    statuss: {},
    applyType: 1,
    fee: 0,
    startUpload: false,
    firstScroll: true
  }
  computed = {}
  methods = {
    GoTo (path) {
      wepy.navigateTo({
        url: `../${path}`
      })
    },
    toShowStatus (action) {
      switch (action) {
        case 'reason':
          this.showReason = true
          break
        case 'status':
          this.showStatus = true
          break
      }
    },
    onBindNote (e) {
      lf.log.info('e:', e)
      this.note = e.detail.value
    },
    onStatusChange(picker, value, index) {
      lf.log.info('picker', picker, value, index)
      lf.log.info('this.reasons[0].values', this.reasons[0].values)
      lf.log.info('picker', picker.detail.value[0])
      this.firstScroll = false
      if (this.showReason) {
        this.chooseReasonIndex = this.reasons[0].values.findIndex((v) => {
          return picker.detail.value[0] === v
        })
        this.reasons[0].defaultIndex = this.chooseReasonIndex
      } else {
        this.chooseStatusIndex = this.statuss[0].values.findIndex((v) => {
          return picker.detail.value[0] === v
        })
        this.statuss[0].defaultIndex = this.chooseStatusIndex
      }
    },
    onClose () {
      this.showReason = false
      this.showStatus = false
      this.firstScroll = true
    },
    showStatusConfirm (action) {
      lf.log.info('action:', action)
      switch (action) {
        case 'status':
          if (this.firstScroll) {
            this.chooseStatusIndex = 0
          }
          this.confirmStatus = this.statuss[0].values[this.chooseStatusIndex]
          this.showStatus = false
          break
        case 'reason':
          if (this.firstScroll) {
            this.chooseReasonIndex = 0
          }
          this.confirmReason = this.reasons[0].values[this.chooseReasonIndex]
          this.showReason = false
          break
      }
      this.firstScroll = true
    },
    delImg(index) {
      this.img.splice(index, 1)
      this.imgPath.splice(index, 1)
      this.$apply()
    },
    uploadImg() {
      if (this.startUpload) {
        lf.log.info('返回了')
        return
      }
      this.startUpload = true
      wx.chooseImage({
        count: this.imgCount - this.img.length,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: res => {
          lf.toast('上传中...')
          this.imgUpdate(res)
        },
        complete: res => {
          lf.log.info('complate')
        }
      })
    },
    async onSubmit () {
      if (this.applyType === 1) {
        if (!this.confirmReason) {
          lf.toast('请选择退货原因')
          return
        }
      }
      if (this.applyType === 2) {
        if (!this.confirmReason || !this.confirmStatus) {
          lf.toast('退货原因和货物状态为必选')
          return
        }
      }
      var data = {
        // order_item_id: this.$parent.globalData.returnOrderId || 1788,
        order_item_id: this.$parent.globalData.returnOrderId,
        goods_status: this.chooseStatusIndex + 1,
        return_type: this.applyType,
        apply_return_reason: this.confirmReason,
        apply_return_images: this.imgPath.join(','),
        apply_amount: lf.util.multNum(this.good.number, this.good.discount_amount),
        apply_return_info: this.note
      }
      try {
        var r = await lf.net.post('/Api/Orderreturn/return_add', data)
      } catch (e) {
        lf.toast('系统错误，上传失败')
      }
      if (r.code === 200) {
        wepy.redirectTo({
          url: `applyOk`
        })
      } else {
        lf.toast(r.info)
      }
      this.$apply()
    }
  }
  events = {
  }
  async imgUpdate(res, count = 0) {
    var c = count
    let data = res
    if (c === data.tempFilePaths.length) {
      this.startUpload = false
      return lf.toast('上传成功')
    }
    var filePath = data.tempFilePaths[c].toString()
    let file = {
      filePath: filePath,
      fileName: 'filename'
    }
    let r = {}
    try {
      r = await lf.net.upload('/Api/public/upload_file', file, {type: 'image'})
    } catch (e) {
      lf.toast('系统错误，上传失败')
    }
    if (r.code === 200) {
      this.img.push(r.data.url)
      this.imgPath.push(r.data.path)
      c++
      this.imgUpdate(data, c)
    } else {
      if (this.isSuccess) {
        this.isSuccess = false
        this.imgUpdate(data, c)
      } else {
        lf.toast(r.info)
      }
    }
    this.$apply()
  }

  onLoad (option) {
    lf.log.info('option:', option)
    this.initData()
    // 仅退款
    this.applyType = parseInt(option.param)
    if (this.applyType === 1) {
      wx.setNavigationBarTitle({
        title: '用户退款'
      })
    }
  }

  initData() {
    this.showReason = false
    this.good = ''
    this.reasons = []
    this.confirmReason = ''
    this.confirmStatus = ''
    this.chooseReasonIndex = 0
    this.chooseStatusIndex = 0
    this.startUpload = false
    this.img = []
    this.imgPath = []
    this.showStatus = false
    this.statuss = []
    this.applyType = 1
    this.fee = 0
  }
  async getStatusData () {
    var orderItemId = this.$parent.globalData.returnOrderId
    lf.log.info('-----orderItemId,', orderItemId)
    try {
      // const r = await lf.net.post('/Api/Orderreturn/return_public_data', {order_item_id: orderItemId || 1788})
      const r = await lf.net.post('/Api/Orderreturn/return_public_data', {order_item_id: orderItemId})
      if (r.code === 200) {
        var reasons = {}
        var statuss = {}
        reasons.defaultIndex = 0
        statuss.defaultIndex = 0
        reasons.values = []
        statuss.values = []
        r.data.return_reasons.forEach(v => {
          reasons.values.push(v.title)
        })
        r.data.goods_status.forEach(v => {
          statuss.values.push(v.title)
        })
        this.reasons = [reasons]
        this.statuss = [statuss]
        this.$apply()
      } else {
        wepy.showToast({
          title: r.info,
          icon: 'none'
        })
      }
    } catch (e) {
      lf.log.info('e:', e)
      wepy.showToast({
        title: '系统内部错误',
        icon: 'none'
      })
    }
  }
  onShow () {
    this.good = JSON.parse(this.$parent.globalData.refundInfo)
    this.fee = lf.util.multNum(this.good.number, this.good.discount_amount).toFixed(2)
    this.getStatusData()
  }
}
</script>
