<style lang="scss">
  @import "../css/common";
  page{
    background-color: white;
  }
  .estimate {
    .placeholder{
      height: torpx(20);
      background-color: #f5f5f5;
    }
    .starWarp{
      height: torpx(162);
      padding: 0 torpx(40);
      width: 100%;
      box-sizing: border-box;
      .content {
        height: 100%;
        display: flex;
        align-items: center;
        border-bottom: 1px solid #eee;
        .desImage {
          width: torpx(100);
          height: torpx(100);
          box-shadow: torpx(3) torpx(3) torpx(50) #eee,
                      torpx(-3) torpx(-3) torpx(50) #eee;
        }
        .star {
          flex: 1;
          margin-left: torpx(20);
          font-size: torpx(25);
          display: flex;
          height: 100%;
          align-items: center;
          .DESWord {
            color: #000;
            margin-right: torpx(38);
          }
          .starItem {
            flex: 1;
            display: flex;
            justify-content: space-between;
            .starImg {
              width: torpx(44);
              height: torpx(44);
            }
          }
          .star_des {
            color: #666;
            margin-left: torpx(30);
            width: torpx(75);
            text-align: center;
          }
        }
      }
    }
    .writeDescribe {
      padding: 0 torpx(40);
      box-sizing: border-box;
      .textarea {
        width: 100%;
        min-height: torpx(136);
        padding-top: torpx(25);
        margin-bottom: torpx(25);
        box-sizing: border-box;
      }
      .des_Img {
        padding-top: torpx(30);
        display: flex;
        padding-bottom: torpx(44);
        .no_image {
          @extend .imgS;
          display: flex;
          align-items: center;
          flex-direction: column;
          justify-content: center;
          .noImg {
            width: torpx(43);
            height: torpx(36);
            margin-bottom: torpx(10);
          }
          .txt{
            font-size: torpx(24);
            color: #848484;
          }
        }
        .imgItemS {
          position: relative;
          @extend .imgS;
          &:last-child {
            margin-right: torpx(0) !important;
          }
          .img_s {
            width: 100%;
            height: 100%;
            border-radius: torpx(5);
          }
          .delet-img {
            width: torpx(30);
            height: torpx(30);
            position: absolute;
            top: torpx(-15);
            right: torpx(-12);
          }
        }
        .C_image {
          @extend .imgS;
          display: flex;
          justify-content: center;
          flex-direction: column;
          align-items: center;
          .cImg {
            width: torpx(44);
            height: torpx(36);
            margin-bottom: torpx(12);
          }
          .nTxt {
            color: #848484;
            font-size: torpx(24);
          }
        }
        .restrict {
          font-size: torpx(24);
          color: #848484;
          align-self: flex-end;
          flex: 1;
          text-align: right;
          padding-right: torpx(18);
        }
      }
    }
    .anonymity {
      padding: torpx(26) torpx(40) torpx(20);
      box-sizing: border-box;
      display: flex;
      justify-content: space-between;
      .isAnonymity {
        display: flex;
        align-items: center;
        .anonymityImg {
          width: torpx(30);
          height: torpx(30);
        }
        .txtAnonymity {
          font-size: torpx(26);
          color: #666666;
          margin-left: torpx(20);
        }

      }
      .explain {
        color: #999999;
        font-size: torpx(26);
      }
    }
    /*.bottomPlaceholder {*/
      /*height: torpx(150);*/
    /*}*/
    .publish {
      /*position: fixed;*/
      /*left: 0;*/
      /*bottom: 0;*/
      width: 100%;
      z-index: 9888;
      height: torpx(140);
      padding-top: torpx(10);
      display: flex;
      background: white;
      justify-content: center;
      .publishImg {
        height: torpx(103);
        width: torpx(685);
        margin: 0 auto;
      }
      .txt_publish {
        position: absolute;
        font-size: torpx(32);
        text-align: center;
        width:torpx(685);
        line-height: torpx(103);
        color: white;
      }
    }
  }
  .imgS{
    width: torpx(136);
    height: torpx(136);
    border: 1px dashed #cccccc;
    border-radius: torpx(5);
    margin-right: torpx(25);
  }
  .pTextarea {
    font-size: torpx(26);
    color: #b5b5b5;
  }
  .toastImg {
    height: 100vmax;
    width: 100%;
    background-color: rgba(0, 0, 0, 0.85);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 9999;
    display: flex;
    justify-content: center;
    flex-direction: column;
    .swiper {
      width: 100%;
      height: torpx(604);
      .closeSwiper {
        width: torpx(46);
        height: torpx(46);
        display: block;
        position: fixed;
        top: torpx(30);
        right: torpx(30);
      }
      swiper {
        height: 100%;
        .slide-image {
          width: 100%;
          height: 100%;
        }
      }
      .dot {
        margin-top: torpx(50);
        width: 100%;
        display: flex;
        justify-content: center;
        .dot_item {
          width: torpx(12);
          height: torpx(12);
          background-color: red;
          margin: 0 torpx(6);
          border-radius: 50%;
        }
      }
    }
  }
</style>
<template>
  <view wx:if="{{ev == 0}}" class="estimate">
    <block wx:for="{{orderInfo}}" wx:key="unique" wx:for-index="index">
      <view class="placeholder"></view>
      <view class="starWarp">
          <view class="content">
            <image class="desImage" mode="aspectFit" src="{{item.goods_cover_url}}"></image>
            <view class="star">
              <view class="DESWord">描述相符</view>
              <view class="starItem">
                <block wx:for="{{ starCount }}" wx:key="unique" wx:for-index="idx">
                  <image class="starImg" src="{{selectIndex[index]< (idx + 1) ? './../images/no_select_star.png': './../images/select_star.png'}}" bindtap="selectStar({{index}}, {{idx}})"></image>
                </block>
              </view>
              <view class="star_des">{{starDes[index]}}</view>
            </view>
          </view>
        </view>
      <view class="writeDescribe">
          <view  wx:if="{{disabled}}" class="textarea">{{textareaValue[selectPreViewIndex]}}</view>
          <textarea wx:else class="textarea" data-index="{{index}}" value="{{textareaValue[index]}}" bindinput="getValue" auto-height maxlength="500" disabled="{{ disabled }}" placeholder="宝贝满足你的期待吗？说说你的体验，分享给想买的他们。" placeholder-class="pTextarea"></textarea>
          <view class="des_Img">
            <view class="no_image" bindtap="uploadImg" data-idx="{{index}}" wx:if="{{imgs[index].length === 0}}">
              <image class="noImg" src="./../images/no_image.png"></image>
              <view class="txt">添加图片</view>
            </view>
            <block wx:for="{{imgs[index]}}" wx:key="unique" wx:for-index="i" wx:for-item="iem">
              <view class="imgItemS">
                <image mode="aspectFit" class="img_s" bindtap="previewImg({{index}}, {{i}})" src="{{iem}}"></image>
                <image class="delet-img" src="./../images/delet_image.png"  catchtap="delImg({{index}}, {{i}})"></image>
              </view>
            </block>
            <view class="C_image" bindtap="uploadImg" data-idx="{{index}}" wx:if="{{imgs[index].length > 0 && imgs[index].length < 3}}">
              <image class="cImg" src="./../images/no_image.png"></image>
              <view class="nTxt">
                <text>{{imgs[index].length}}</text><text>/{{imgCount}}</text>
              </view>
            </view>
            <view class="restrict">评论限500字</view>
          </view>
        </view>
    </block>
    <view style="border-bottom: 1px solid #eeeeee;margin: 0 40rpx"></view>
    <view class="anonymity">
      <view class="isAnonymity" bindtap="isAnonymity">
        <image class="anonymityImg" src="{{is_Anonymity ? './../images/no_anonymity.png': './../images/anonymity.png'}}"></image>
        <text class="txtAnonymity">匿名</text>
      </view>
      <view class="explain">
        {{is_Anonymity ? anonymity : no_anonymity}}
      </view>
    </view>
    <!--<view class="bottomPlaceholder"></view>-->
    <view class="publish">
      <image class="publishImg" src="{{(textareaValueIsAll) ? './../images/publish.png': './../images/J_publish.png'}}"></image>
      <view  bindtap="publish" class="txt_publish">发表评论</view>
    </view>
    <view wx:if="{{ show }}" class="toastImg"  catchtouchmove="preventLog">
      <view class="swiper">
        <image class="closeSwiper" src="./../images/closetoast.png" bindtap="onClose"></image>
        <swiper indicator-dots="{{ false }}" current="{{current[selectPreViewIndex]}}"  bindchange="swipercChange">
          <block wx:for="{{imgs[selectPreViewIndex]}}" wx:key="unique">
            <swiper-item class="itemIMg">
              <image src="{{item}}" mode="aspectFit" class="slide-image" />
            </swiper-item>
          </block>
        </swiper>
        <view class="dot">
          <block wx:for="{{imgs[selectPreViewIndex]}}" wx:key="unique" >
            <view class="dot_item" style="background:{{current[selectPreViewIndex] === index? '#fff': '#616161'}}"></view>
          </block>
        </view>
      </view>
    </view>
    </view>
  <view wx:else class="estimate">
    <block wx:for="{{orderInfo}}" wx:key="unique" wx:for-index="index" wx:for-item="item">
      <view class="placeholder"></view>
      <view class="starWarp">
        <view class="content">
          <image class="desImage" mode="aspectFit" src="{{item.goods_cover_url}}"></image>
          <view class="star">
            <view class="DESWord">描述相符</view>
            <view class="starItem">
              <block wx:for="{{ starCount }}" wx:key="unique" wx:for-index="idx" wx:for-item="dataItem">
                <image class="starImg" src="{{(item.goods_star - 0) <= idx ? './../images/no_select_star.png': './../images/select_star.png'}}" bindtap="selectStar({{index}}, {{idx}})"></image>
              </block>
            </view>
            <view class="star_des">{{starTxt[(item.goods_star - 0)]}}</view>
          </view>
        </view>
      </view>
      <view class="writeDescribe">
        <view class="textarea">{{item.evaluation_info}}</view>
        <!--<textarea class="textarea" data-index="{{index}}" value="{{item.evaluation_info}}" bindinput="getValue" auto-height maxlength="500" disabled="{{ disabled }}" placeholder="宝贝满足你的期待吗？说说你的体验，分享给想买的他们。" placeholder-class="pTextarea"></textarea>-->
        <view class="des_Img" wx:if="{{item.evaluation_images_list.length > 0}}">
          <!--<view class="no_image" bindtap="uploadImg" data-idx="{{index}}" wx:if="{{item.evaluation_images_list.length === 0}}">-->
            <!--<image class="noImg" src="./../images/no_image.png"></image>-->
            <!--<view class="txt">添加图片</view>-->
            <!--<view class="txt" wx:if="{{item.evaluation_images_list.length === 0}}">没有图片</view>-->
          <!--</view>-->
          <block wx:for="{{item.evaluation_images_list}}" wx:key="unique" wx:for-index="i" wx:for-item="iem">
            <view class="imgItemS">
              <image mode="aspectFit" class="img_s" bindtap="previewImg({{index}}, {{i}})" src="{{iem}}"></image>
              <!--<image class="delet-img" src="./../images/delet_image.png"  catchtap="delImg({{index}}, {{i}})"></image>-->
            </view>
          </block>
          <!--<view class="C_image" bindtap="uploadImg" data-idx="{{index}}" wx:if="{{imgs[index].length > 0 && imgs[index].length < 3}}">-->
            <!--<image class="cImg" src="./../images/no_image.png"></image>-->
            <!--<view class="nTxt">-->
              <!--<text>{{item.evaluation_images_list.length}}</text><text>/{{imgCount}}</text>-->
            <!--</view>-->
          <!--</view>-->
          <!--<view class="restrict">评论限500字</view>-->
        </view>
      </view>
    </block>
    <view style="border-bottom: 1px solid #eeeeee;margin: 0 40rpx"></view>
    <view class="anonymity">
      <view class="isAnonymity" bindtap="isAnonymity">
        <image class="anonymityImg" src="{{orderInfo[0].is_anonymous - 0 === 0 ? './../images/anonymity.png': './../images/no_anonymity.png'}}"></image>
        <text class="txtAnonymity">匿名</text>
      </view>
      <view class="explain">
        {{is_Anonymity ? anonymity : no_anonymity}}
      </view>
    </view>
    <!--<view class="bottomPlaceholder"></view>-->
    <view class="publish">
      <image class="publishImg" src="{{(textareaValueIsAll) ? './../images/publish.png': './../images/J_publish.png'}}"></image>
      <view  bindtap="publish" class="txt_publish">{{ev === 1 ? '您已评论' : '发表评论'}}</view>
    </view>

    <view wx:if="{{ showH }}" class="toastImg"  catchtouchmove="preventLog">
      <text>ShowH</text>
      <view class="swiper">
        <image class="closeSwiper" src="./../images/closetoast.png" bindtap="onClose"></image>
        <swiper indicator-dots="{{ false }}" current="{{current[selectPreViewIndex]}}"  bindchange="swipercChange">
          <block wx:for="{{orderInfo[selectPreViewIndex].evaluation_images_list}}" wx:key="unique">
            <swiper-item class="itemIMg">
              <image src="{{item}}" mode="aspectFit" class="slide-image" />
            </swiper-item>
          </block>
        </swiper>
        <view class="dot">
          <block wx:for="{{orderInfo[selectPreViewIndex].evaluation_images_list}}" wx:key="unique" >
            <view class="dot_item" style="background:{{current[selectPreViewIndex] === index? '#fff': '#616161'}}"></view>
          </block>
        </view>
      </view>
    </view>
  </view>
  <view wx:if="{{isPx}}" style="height: 80rpx"></view>
</template>

<script>
import { fireEvent, EVENT, TYPES } from './../js/event'
import wepy from 'wepy'
import lf from 'lf'
export default class Estimate extends wepy.page {
  config = {
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#fff',
    navigationBarTitleText: '发表评论',
    navigationBarTextStyle: 'black',
    usingComponents: {}
  }
  components = { }
  data = {
    order_id: null,
    indexP: null,
    orderInfo: [],
    selectIndex: [],
    starTxt: ['很差', '差', '一般', '好', '非常好'],
    starCount: 5,
    starDes: [],
    disabled: false,
    textareaValue: [],
    textareaValueIsAll: false,
    imgs: [],
    imgPaths: [],
    is_Anonymity: false,
    anonymity: '你的评价能帮助其他小伙伴哟',
    no_anonymity: '你写的评论会以匿名的形式展现',
    show: false,
    showH: false,
    current: [],
    imgCount: 3,
    selectPreViewIndex: null,
    isSuccess: true,
    ev: 0,
    tap: null,
    isPx: false
  }
  computed = {}
  methods = {
    selectStar(index, i) {
      if (+this.ev === 1) {
        return false
      }
      this.selectIndex[index] = i + 1
      this.starDes[index] = this.starTxt[i]
      this.$apply()
    },
    previewImg(index, i) {
      if (this.ev === 0) {
        this.show = true
      } else {
        this.showH = true
      }
      this.selectPreViewIndex = index
      this.current[index] = i
      this.disabled = true
      this.$apply()
    },
    delImg(index, i) {
      this.imgs[index].splice(i, 1)
      this.imgPaths[index].splice(i, 1)
      this.$apply()
    }
  }
  isAnonymity () {
    if (+this.ev === 1) {
      return false
    }
    this.is_Anonymity = !this.is_Anonymity
    this.$apply()
  }
  getValue (e) {
    let { index } = e.currentTarget.dataset
    this.textareaValue[index] = e.detail.value.trim()
    for (let i = 0; i < this.textareaValue.length; i++) {
      if (!this.textareaValue[i].trim() || this.textareaValue[i] === '' || this.textareaValue[i] === null) {
        this.textareaValueIsAll = false
        break
      } else {
        this.textareaValueIsAll = true
      }
    }
    this.$apply()
  }
  onClose () {
    this.show = false
    this.showH = false
    this.disabled = false
    this.$apply()
  }
  swipercChange(e) {
    this.current[this.selectPreViewIndex] = e.detail.current
    this.$apply()
  }
  preventLog () {}
  uploadImg(e) {
    if (+this.ev === 1) {
      return false
    }
    let { idx } = e.currentTarget.dataset
    wx.chooseImage({
      count: this.imgCount - this.imgPaths[idx].length,
      sizeType: ['original', 'compressed'],
      sourceType: ['album', 'camera'],
      success: res => {
        lf.toast('上传中...')
        this.imgUpdate(res, idx)
      }
    })
  }
  async imgUpdate(res, idx, count = 0) {
    var c = count
    let data = res
    if (c === data.tempFilePaths.length) {
      return lf.toast('上传成功')
    }
    var filePath = data.tempFilePaths[c].toString()
    let file = {
      filePath: filePath,
      fileName: 'filename'
    }
    let r = {}
    try {
      r = await lf.net.upload('/Api/public/upload_file', file, {type: 'image'})
    } catch (e) {
      lf.toast('系统错误，上传失败')
    }
    if (r.code === 200) {
      this.imgs[idx].push(r.data.url)
      this.imgPaths[idx].push(r.data.path)
      c++
      this.imgUpdate(data, idx, c)
    } else {
      if (this.isSuccess) {
        this.isSuccess = false
        this.imgUpdate(data, idx, c)
      } else {
        lf.toast(r.info)
      }
    }
    this.$apply()
  }
  async publish () {
    if (+this.ev === 1) {
      return false
    }
    if (!this.textareaValueIsAll) {
      return lf.toast('请填写描叙')
    }
    const r = await lf.net.post('/Api/evaluation/evaluations_add', {
      order_id: this.order_id,
      evaluation_json: this.handleData()
    })
    if (r.code === 200) {
      let ORDER_STATUS_CHANGES = TYPES.ORDER_STATUS_CHANGES
      let ORDER_PASS_CHANGES = TYPES.ORDER_PASS_CHANGES
      let TYPE = (this.tap && Number(this.tap) === -1) ? ORDER_PASS_CHANGES : ORDER_STATUS_CHANGES
      let DATA = (this.tap && Number(this.tap) === -1) ? this.indexP : this.order_id
      if (+this.tap !== -1) {
        fireEvent(EVENT.ORDER, {
          type: TYPE,
          data: DATA
        })
      }
      wx.navigateBack({
        delta: 1
      })
    }
  }
  handleData() {
    var arr = []
    let isAnonymous = this.is_Anonymity ? 1 : 0
    this.orderInfo.forEach((item, index) => {
      if (this.imgPaths[index].length > 0) {
        this.imgPaths[index] = this.imgPaths[index].join(',')
      } else {
        this.imgPaths[index] = ''
      }
      arr.push({
        order_item_id: item.id,
        goods_star: this.selectIndex[index],
        is_anonymous: isAnonymous,
        // evaluation_cover: item.goods_cover_url,
        evaluation_images: this.imgPaths[index],
        evaluation_info: this.textareaValue[index]
      })
    })
    return JSON.stringify(arr)
  }
  events = {}
  onLoad (opt) {
    let { goods, orderId, status, tap, index } = opt
    this.order_id = orderId
    let orderInfo = JSON.parse(goods)
    orderInfo.forEach(item => {
      if (+item.is_return === 0) {
        this.orderInfo.push(item)
      }
    })
    this.indexP = index
    this.isPx = this.$parent.globalData.isIpx
    this.ev = +status
    if (tap) {
      this.tap = tap
    }
    if (+status === 1) {
      this.getEstimateDetail()
    } else {
      this.initData()
    }
    this.$apply()
  }
  initData () {
    for (let i = 0; i < this.orderInfo.length; i++) {
      this.selectIndex.push(5)
      this.current.push(0)
      this.imgs.push([])
      this.imgPaths.push([])
      this.textareaValue.push('')
      this.starDes.push('非常好')
      this.$apply()
    }
  }
  onShow () {}
  async getEstimateDetail() {
    const r = await lf.net.post('/Api/evaluation/evaluations_detail', {order_id: this.order_id})
    if (r.code === 200) {
      this.disabled = true
      this.orderInfo = r.data.list
      setTimeout(() => {
        this.initData()
      }, 0)
      this.$apply()
    } else {
      lf.toast(r.info)
      setTimeout(() => {
        wx.navigateBack({
          delta: 1
        })
      }, 1500)
    }
  }
  onUnload() {
    this.order_id = null
    this.indexP = null
    this.orderInfo = []
    this.selectIndex = []
    this.starTxt = ['很差', '差', '一般', '好', '非常好']
    this.starCount = 5
    this.starDes = []
    this.disabled = false
    this.textareaValue = []
    this.textareaValueIsAll = false
    this.imgs = []
    this.imgPaths = []
    this.is_Anonymity = false
    this.anonymity = '你的评价能帮助其他小伙伴哟'
    this.no_anonymity = '你写的评论会以匿名的形式展现'
    this.show = false
    this.showH = false
    this.current = []
    this.imgCount = 3
    this.selectPreViewIndex = null
    this.isSuccess = true
    this.ev = 0
    this.tap = null
    this.isPx = false
    this.$apply()
  }
}
</script>
