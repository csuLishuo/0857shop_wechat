<style lang="less">
  .container {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    padding-top: 368rpx;
    /*margin: auto auto;*/
    height: 100vh;
    /*background-image: linear-gradient(0deg,*/
    /*#20ac41 0%,*/
    /*#30c78e 100%),*/
    /*linear-gradient(*/
      /*#30c78e,*/
      /*#30c78e);*/
    background-color: #cf0210 ;
    background-blend-mode: normal,
    normal;
    .middle-body {
      width: 100%;
      .code-tip {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        margin-bottom: 62rpx;
        color: #ffffff;
        font-size: 30rpx;
      }
      .code-list {
        display: flex;
        justify-content: space-around;
        align-items: center;
        flex-direction: row;
        color: #ffff;
        font-size: 60rpx;
        .code-input {
          width: 80rpx;
          height: 80rpx;
          border: solid black 1rpx;
          display: flex;
          border-radius: 4rpx;
          border: solid 2px rgba(255, 255, 255, 0.4);
          opacity: 0.4;
          justify-content: center;
          align-items: center;
          input {
            text-align: center;
          }
        }
        .choose-code-input {
          width: 80rpx;
          height: 80rpx;
          border: solid black 1rpx;
          display: flex;
          border-radius: 4rpx;
          border: solid 2px #ffffff;
          opacity: 0.4;
          justify-content: center;
          align-items: center;
          input {
            text-align: center;
          }
        }
      }
    }

  }
  .key-borad {
    width:100%;
    display: flex;
    width: 100%;
    position: fixed;
    bottom: 0;
    background-color: #fff;
    .wa-grid {
      width:100%;
      overflow: hidden;
      text-align: center;
    }
    .wa-grid-33 {
      float: left;
      width: 33.3%;
      height: 50px;
      display: flex;
      align-items: center;
      justify-content: center;
      box-sizing: border-box;
      border: 1rpx solid #eee;
      image {
        width: 40px;
        height: 30px;
      }
      .num-key {
        font-family: Arial;
        font-size: 30px;
      }
    }

  }
</style>
<template>
  <view class="container">
    <view class="middle-body">
      <view  class="code-tip">
        请输入验证码
      </view>
      <view class="code-list">
        <view wx:for="{{codeArray}}" wx:key="*this">
          <view class="{{item.choose ? 'choose-code-input' : 'code-input'}}" >
            <input maxlength="1" type="number" value="{{item.value}}" disabled="true"
                   placeholder="" />
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="key-borad">
    <view class="wa-grid">
      <view class="wa-grid-33 border-basic" data-Id="1" @tap="keyInput">
        <text class="num-key">1</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="2" @tap="keyInput">
        <text class="num-key"> 2</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="3" @tap="keyInput">
        <text class="num-key">3</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="4" @tap="keyInput">
        <text class="num-key">4</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="5" @tap="keyInput">
        <text class="num-key">5</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="6" @tap="keyInput">
        <text class="num-key">6</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="7" @tap="keyInput">
        <text class="num-key">7</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="8" @tap="keyInput">
        <text class="num-key">8</text>
      </view>
      <view class="wa-grid-33 border-basic" data-Id="9" @tap="keyInput">
        <text class="num-key">9</text>
      </view>
      <view class="wa-grid-33 border-basic" style="background-color: #ccc">
      </view>
      <view class="wa-grid-33 border-basic" data-Id="0" @tap="keyInput">
        <text class="num-key">0</text>
      </view>
      <view class="wa-grid-33 border-basic" style="background-color: #ccc" data-Id="delete" @tap="keyInput">
        <image src="https://z.hidajian.com/Public/Adc/images/xcx/icon_error.png"></image>
      </view>
    </view>
  </view>
  <van-toast id="van-toast" />
</template>
<script>
  import wepy from 'wepy'
  import lf from 'lf'
  import Toast from '@/components/vant/toast/toast'
  export default class Certified extends wepy.page {
    config = {
      navigationBarTitleText: '认证',
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#cf0210',
      navigationBarTextStyle: 'white',
      usingComponents: {
        'van-toast': '/components/vant/toast/index'
      }
    }
    components = {}
    data = {
      codeArray: [
        {
          value: '',
          choose: true
        },
        {
          value: '',
          choose: false
        },
        {
          value: '',
          choose: false
        },
        {
          value: '',
          choose: false
        },
        {
          value: '',
          choose: false
        },
        {
          value: '',
          choose: false
        }
      ]
    }
    computed = {
    }
    methods = {
      keyInput: function (e) {
        var key = e.currentTarget.dataset.id
        var codeArray = this.codeArray
        // 点击删除
        if (key === 'delete') {
          for (let i = 0; i < codeArray.length; i++) {
            // 最后一个
            if ((i + 1) === codeArray.length && codeArray[i].value) {
              codeArray[i].value = ''
              codeArray[i].choose = true
            } else if (codeArray[i].value && !codeArray[i + 1].value) {
              codeArray[i].value = ''
              codeArray[i + 1].choose = false
              codeArray[i].choose = true
            }
          }
          // 点击数字按钮
        } else {
          var code = ''
          for (let i = 0; i < codeArray.length; i++) {
            code += codeArray[i].value
            if (!codeArray[i].value) {
              codeArray[i].value = key
              codeArray[i].choose = false
              var codeLength = i + 1
              if (i !== codeArray.length - 1) {
                codeArray[i + 1].choose = true
              }
              break
            }
          }
        }
        code += key
        this.codeArray = codeArray
        this.$apply()
        if (codeLength !== 6) {
          return
        }
        this.submitCode(code)
      }
    }
    events = {}
    async getUserData (code) {
      return await lf.net.post('/Api/public/open_id', {
        code: code
      })
    }
    onLoad (options) {
      this.orderData = options
      // lf.log.info('this.orderData', this.orderData)
      if (!lf.user.isLogin() && !lf.storage.get('mid')) { // 非的登录情况
      }
      this.sendVerify(options.phone)
    }

    async sendVerify (phone) {
      try {
        const result = await lf.net.post('/Api/order/order_sendVerify', {phone: phone, order_id: this.orderData.order_id})
        if (result.code === 200) {
          // Toast('认证码已经发送到手机···')
          lf.toast(result.info)
        } else {
          Toast.fail(result.info)
        }
      } catch (err) {
      }
    }

    async submitCode(code) {
      try {
        const result = await lf.net.post('/Api/order/check_customer_mobile', {verify: code, mobile: this.orderData.phone, order_id: this.orderData.order_id})
        if (result.code === 200) {
          if (result.data && result.data.auth_sign) {
            lf.storage.set('auth_sign', result.data.auth_sign)
            lf.storage.set('mid', result.data.mid)
            lf.user.save(result.data)
          }
          wepy.reLaunch({
            url: 'myOrder?order_id=' + this.orderData.order_id + '&phone=' + this.orderData.phone
          })
        } else {
          Toast.fail(result.info)
        }
      } catch (err) {
        Toast.fail(err.toString())
      }
    }
  }
</script>
