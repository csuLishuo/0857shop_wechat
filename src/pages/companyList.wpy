<style lang="scss">
.companyList{
  height: 100vh;
  /* pages/dome/dome.wxss */
  .wrapper {
    height: 100vh;
  }
  /* 关闭滚动条  */
  ::-webkit-scrollbar{
    width: 0;
    height: 0;
    color: transparent;
  }
  .list-warpper {
    position: relative;
    width: 100%;
    height: 100%;
    box-sizing: border-box;
  }

  .list-scroll {
    width: 100%;
    height: 100%;
    box-sizing: border-box;
  }
  .list-scroll.top{
    padding-top: 90rpx;
  }

  /* 样式控制  */

  .list-title {
    background: #f5f5f5;
    color: #666;
    font-size: 36rpx;
    /* padding: 10rpx; */
    padding-left: 30rpx;
    height: 80rpx;
    line-height: 80rpx;
    /* padding-top: 15rpx; */
  }

  .list-name {
    position: relative;
    font-size: 28rpx;
    padding: 15rpx;
    padding-left: 30rpx;
    color: #999;
  }

  .list-name.border::after {
    content: "";
    position: absolute;
    left: 30rpx;
    right: 0;
    top: 0;
    height: 1px;
    background: #f5f5f5;
  }

  .list-right-wrapper {
    position: absolute;
    top: 120rpx;
    right: 20rpx;
    padding: 20rpx 0;
    border-radius: 40rpx;
    /* z-index: 2; */
    background: #ddd;
    box-sizing: border-box;
    z-index: 999;
  }

  .right-item {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rpx 10rpx;
    font-size: 26rpx;
    color: #666;
  }
  .right-item.active {
    color: red
  }
  /* 热门城市横排显示样式  */

  .list-horizontal {
    display: flex;
    flex-wrap: wrap;
    padding: 10rpx;
    padding-right: 50rpx;
  }

  .list-horizontal .list-name {
    padding: 5rpx 20rpx;
    border: 1px #ccc solid;
    border-radius: 10rpx;
    margin: 10rpx;
    /* margin-right: 20rpx; */
  }
  .fiexed-box {
    position: absolute;
    top: 90rpx;
    z-index: 19;
    width: 100%;
    /* background: #ddd; */
  }

  /* 无数据  */
  .nodata {
    padding-top: 200rpx;
    text-align: center;
    font-size: 32rpx;
    color: #ddd;
  }
}
</style>
<template>
  <view class="companyList">
    <view class='wrapper'>
      <list-html data="{{companyList}}" binddetail="detail" my-city="" config="{{config}}"></list-html>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
// import lfcanvas from './../js/lfcanvas'

export default class Test extends wepy.page {
  config = {
    navigationBarTitleText: '选择快递公司',
    usingComponents: {
      'list-html': '/components/wx-index-list/wx-index-list'
    }
  }
  components = {}
  data = {
    url: '',
    companyList: [],
    config: {
      horizontal: false, // 第一个选项是否横排显示（一般第一个数据选项为 热门城市，常用城市之类 ，开启看需求）
      animation: true, // 过渡动画是否开启
      search: false, // 是否开启搜索
      searchHeight: 0, // 搜索条高度
      suctionTop: false // 是否开启标题吸顶
    },
    letterArr: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
  }
  computed = {}
  methods = {
    detail (e) {
      let detail = e.detail
      console.log(detail)
      lf.storage.set('companyDetail', JSON.stringify(detail))
      wepy.navigateBack()
    }
  }
  async getCompanyList () {
    wepy.showLoading({
      title: '加载中...'
    })
    let result = await lf.net.post('/Api/Public/logistics_company_list', {})
    if (result.code === 200) {
      let list = result.data.list
      // 构造数据结构
      for (let i = 0; i < list.length; i++) {
        let arr = []
        for (let m = 0; m < this.companyList.length; m++) {
          arr.push(this.companyList[m].title)
        }
        for (let n = 0; n < this.letterArr.length; n++) {
          this.createCompanyList(list[i], arr, this.letterArr[n])
        }
      }
      console.log(result)
      console.log(this.companyList)
      this.$apply()
      wepy.hideLoading()
    } else {
      wepy.showToast({
        title: result.info,
        icon: 'none'
      })
    }
  }
  createCompanyList (obj, arr, letter) {
    if (obj.tag === letter && arr.indexOf(letter) === -1) {
      this.companyList[this.companyList.length] = {
        title: letter,
        item: [obj]
      }
    } else if (obj.tag === letter && arr.indexOf(letter) > -1) {
      this.companyList[arr.indexOf(letter)].item.push(obj)
    }
  }
  events = {}

  onLoad () {
    this.getCompanyList()
  }
  onUnload () {
    this.companyList = []
  }

  onShow () {
    this.companyList = []
  }
}
</script>
