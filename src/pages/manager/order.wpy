<style lang="scss">
  @import "../../css/common";
  page {
    height: 100%;
    margin: 0;
    padding: 0;
  }

  .style {
    width: 140rpx;
    height: 100%;
    text-align: center;
    line-height: 255rpx;
    color: #fff;
    display: inline-block;
  }

  .hidden {
    visibility: visible;
  }

  ::-webkit-scrollbar {
    width: 0;
    height: 0;
    color: transparent;
  }

  .warp {
    height: 100%;
    position: relative;
    .order_nav {
      width: 100%;
      height: 130rpx;
      box-sizing: border-box;
      background: #cf0210;
      position: fixed;
      top: 0;
      z-index: 99;
      left: 0;
      display: flex;
      justify-content: space-around;
      align-items: center;
      padding-bottom: 10rpx;
      .nav_item {
        height: 100%;
        text-align: center;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: center;
        image {
          width: 52rpx;
          height: 55rpx;
          display: block;
          margin-bottom: 10rpx;
        }
        view {
          font-size: 22rpx;
          color: white;
        }
      }
    }
    .scrollView {
      padding: 160rpx 0 10rpx 0;
      height: 100%;
      box-sizing: border-box;
      .order-item{
        background-color: #fff;
        padding:0 torpx(41) torpx(24) torpx(37);
        margin-top: torpx(20);
        .order_item_list{
          padding-bottom:torpx(20);
        }
        .order-item-top{
          padding:torpx(33) 0;
          border-bottom:torpx(1) solid #eeeeee;
          font-size: torpx(26);
          color: #000;
          margin-bottom: torpx(34);
        }
        .footer{
          text-align: right;
          border-top:torpx(1) solid #eeeeee;
          padding-top:torpx(25);
          margin-top:torpx(16);
          .total{
            text-align: right;
            font-size: torpx(24);
            color: #999;
            .money{
              color: #cf0210;
              font-size: torpx(18);
              text{
                font-size: torpx(28);
              }
            }
          }
          .order-btn{
            margin-top: torpx(24);
            width: torpx(150);
            height: torpx(60);
            background-color: #ffffff;
            border-radius: torpx(5);
            border:torpx(1) solid  #999999;
            display: inline-block;
            line-height: torpx(60);
            text-align: center;
            color: #999;
            font-size: torpx(24);
            margin-left:torpx(10);
          }
          .pay-btn{
            background-color: #cf000e;
            color: #fff;
            border: none;
          }
        }
        .van-card{
          background-color: #fff;
          padding:0;
        }
        .van-card__thumb{
          width:torpx(200);
          height:torpx(200);
          border: torpx(1) solid #eee;
        }
        .van-card__title{
          font-size: torpx(30);
          color: #333;
          line-height: torpx(36);
          height: torpx(68);
          overflow: hidden;
          text-overflow: ellipsis;
          display: -webkit-box;
          -webkit-line-clamp:2;
          -webkit-box-orient: vertical;
        }
        .van-card__desc{
          font-size: torpx(24);
          color: #999;
          padding-bottom:torpx(40);
        }
        .van-card__price{
          font-size: torpx(36);
          color: #cf0210;
        }
        .van-card__num{
          font-size: torpx(26);
          color: #666;
        }
      }
      .order-item:first-child{
        margin-top: 0;
      }
      .noData {
        text-align: center;
        font-size: 30rpx;
      }
    }
  }
</style>
<template>
  <view class="warp">
    <view class="order_nav">
      <block wx:for="{{navStatus}}" wx:for-item="item" wx:for-index="index" wx:key="unique">
        <view class="nav_item" bindtap="changeNav" data-navId="{{item.id}}">
          <image wx:if="{{item.id===tapStauts}}" src="{{'./../../images/salesman/nav_icon_' + index + '.png'}}"></image>
          <image wx:else src="{{'./../../images/salesman/nav_icon-'+ index +'.png'}}"></image>
          <view>{{item.text}}</view>
        </view>
      </block>
    </view>
    <scroll-view scroll-y="{{scrollY}}"  bindscrolltolower="getMoreList" class="scrollView" style="height: 100%;padding-bottom:{{ isPx? '90rpx': '10rpx'}}">
      <view wx:if="{{goodsList.length>0 }}" class="order_list">
        <block wx:for="{{goodsList}}" wx:for-index="index" wx:for-item="item" wx:key="unique">
          <view class="order-item">
            <view class="order-item-top clearfix">
              <view style="float: left">订单号: <text>{{item.order_no}}</text></view>
              <view style="float: right;color: #f13d4d;">{{item.dealer_status_text == null ? '' : item.dealer_status_text}}</view>
            </view>
            <view wx:for="{{item.order_item_list}}" wx:for-index="i" wx:for-item="list" wx:key="unique" class="order_item_list" bindtap="toDetails({{item.id}}, {{item.dealer_status}})">
              <!-- bindtap="goDetail({{list.goods_id}})" -->
              <van-card
                num="{{list.number}}"
                price="{{list.amount}}"
                desc="{{list.cate_id_text}}"
                title="{{list.goods_title}}"
                thumb="{{ list.goods_cover_url }}"
              >
              </van-card>
            </view>
            <view class="footer">
              <view class="total">共 <text>{{item.goods_number}}</text>件商品，邮费￥ <text>{{item.delive_amount}}</text>，实付 <text class="money">￥ <text>{{item.order_amount}}</text></text></view>
              <button class="order-btn" bindtap="toDetails({{item.id}}, {{item.dealer_status}})">查看详情</button>
              <button class="order-btn" wx:if="{{item.dealer_status_text === '待客确认'}}" bindtap="deleteOrder({{item.id}})">删除订单</button>
              <!--<button class="order-btn pay-btn" wx:if="{{item.order_status == 10}}" bindtap="toDetails({{item.id}})">立即付款</button>-->
            </view>
          </view>
        </block>
      </view>
      <view wx:else class="noData" style="color: #999">暂无数据</view>
    </scroll-view>
  </view>
</template>
<script>
import wepy from 'wepy'
import lf from 'lf'
import { onEvent, EVENT, TYPES } from '../../js/event'
export default class Newest extends wepy.page {
  config = {
    navigationBarTitleText: '订单',
    backgroundTextStyle: 'dark',
    backgroundColor: '#f7f7f7',
    navigationBarTextStyle: 'white',
    navigationBarBackgroundColor: '#cf0210',
    usingComponents: {
      'van-icon': '/components/vant/icon/index',
      'van-popup': '/components/vant/popup/index',
      'van-cell-group': '/components/vant/cell-group/index',
      'van-swipe-cell': '/components/vant/swipe-cell/index',
      'van-card': '/components/vant/card/index'
    },
    enablePullDownRefresh: true
  }
  data = {
    isPx: false,
    scrollY: true,
    goodsList: [],
    navStatus: [
      {
        id: '',
        text: '全部'
      },
      {
        id: 15,
        text: '已下单'
      },
      // {
      //   id: 10,
      //   text: '待厂确认'
      // },
      {
        id: 11,
        text: '待付款'
      },
      // {
      //   id: 5,
      //   text: '待审核'
      // },
      {
        id: 0,
        text: '待客确认'
      }
    ],
    tapStauts: -1,
    rightWidth: 0,
    isTransparent: true,
    start: 0,
    size: 10,
    orderNum: 0,
    factory_is_open: false,
    isOpen: false,
    // orderRange: null,
    getOrderIndex: null
  }
  computed = {}
  methods = {
    forbidScroll () {
      this.scrollY = false
      this.$apply()
    },
    navClosed () {
      this.scrollY = true
      this.$apply()
    },
    goDetail (id) {
      wepy.navigateTo({
        url: `../wineInfo?goodsId=${id}`
      })
    },
    toDetails (id, status) {
      console.log(id, status)
      let url
      if (+status === 15) {
        url = `./../audit/sendGoodsInfo?orderId=${id}`
      } else {
        let index = this.goodsList.findIndex(item => item.id === id)
        this.getOrderIndex = index
        let tapStauts = this.tapStauts ? this.tapStauts : -1
        url = `../orderApproval?id=${id}&tap=${tapStauts}`
      }
      wepy.navigateTo({
        url
      })
    },
    async deleteOrder (id) {
      try {
        const r = await lf.net.post('/Api/order/order_delete', {
          order_id: id
        })
        if (r.code === 200) {
          wepy.showToast({
            title: '删除成功',
            icon: 'none'
          })
          let index = this.goodsList.findIndex(item => +item.id === +id)
          this.goodsList.splice(index, 1)
          // this.goodsList = []
          this.$apply()
          // this.getGoodsList(this.tapStauts, this.start)
        }
      } catch (e) {
        wepy.showToast({
          title: e.toString(),
          icon: 'none'
        })
      }
    }
  }
  events = {}

  onLoad () {
    this.isPx = lf.util.isPx(this)
    // this.test()
    this.tapStauts = ''
    this.isToCheck()
    this.getGoodsList(this.tapStauts, this.start)
    this.$apply()
  }
  //  跟单员
  // async test () {
  //   const r = await lf.net.post('/api/public/system_config')
  //   if (r.code === 200) {
  //     this.factory_is_open = +r.data.factory_is_open
  //     this.$apply()
  //   }
  //   this.getGoodsList(this.tapStauts, this.start)
  // }
  onShow () {
    onEvent(EVENT.ORDER, (e) => {
      switch (e.type) {
        case TYPES.ORDER_STATUS_CHANGES:
          const changeId = e.data
          const index = this.goodsList.findIndex(v => {
            return changeId === v.id
          })
          if (index > -1) {
            this.goodsList.splice(index, 1)
          }
          break
        case TYPES.ORDER_ALL_DELECT_CHANGES:
          const id = e.data
          const inx = this.goodsList.findIndex(v => {
            return id === v.id
          })
          if (inx > -1) {
            this.goodsList.splice(inx, 1)
          }
          break
        case TYPES.ORDER_PASS_CHANGES:
          this.getGoodsList(this.tapStauts, this.getOrderIndex)
          break
      }
    })
  }

  changeNav (event) {
    let navId = event.currentTarget.dataset.navid
    if (navId === this.tapStauts) {
      return
    }
    var id = navId
    this.tapStauts = navId
    this.initData()
    this.getGoodsList(id, this.start)
    this.$apply()
  }
  async isToCheck () {
    try {
      const res = await lf.net.post('/Api/public/system_config', {})
      if (res.code === 200) {
        if (+res.data.dealer_check_is_open === 1) {
          this.navStatus.splice(this.navStatus.length - 1, 0, {
            id: 5,
            text: '待审核'
          })
        }
      } else {
        lf.toast(res.info)
      }
      this.$apply()
    } catch (e) {
      lf.toast('系统内部错误')
    }
  }
  async getGoodsList (status = '', pageStart = this.start) {
    try {
      let param = {
        dealer_status: status.toString(),
        page_start: pageStart,
        page_size: this.size
      }
      if (status === '') {
        delete param.dealer_status
      }
      wx.showLoading({
        title: '加载中...'
      })
      const result = await lf.net.post('/Api/Order/order_list', param)
      wx.hideLoading()
      if (result.code !== 200) {
        return wx.showToast({
          title: result.info,
          icon: 'none',
          mask: true
        })
      }
      if (result === '' || result.data.list === null || result.data.length === 0 || result.data.list.length === 0) {
        this.$apply()
        return
      }
      result.data.list.forEach((v, i) => {
        if (v.customer_commit_time === null) {
          v.customer_commit_time = ''
        }
        v.order_amount = +v.order_amount + +v.delive_amount
        // if (this.factory_is_open === 0 && +v.dealer_status === 5) {
        //   console.log(0)
        //   result.data.list.splice(i, 1)
        // }
      })
      this.orderNum = result.data.num
      let data = result.data.list
      if (!data || data.length <= 0) {
        return false
      }
      this.$apply()
      if (this.factory_is_open === 1 && !this.isOpen) {
        this.navStatus.splice(2, 0, {
          id: 10,
          text: '待厂确认'
        })
        this.isOpen = true
      }
      if (this.getOrderIndex !== null) {
        data.forEach(item => {
          if (item.id === this.goodsList[this.getOrderIndex].id) {
            this.goodsList.splice(this.getOrderIndex, 1, item)
          }
        })
        // this.orderRange = null
        this.getOrderIndex = null
      } else {
        this.goodsList = this.goodsList.concat(data)
      }
      this.$apply()
    } catch (e) {
      wx.showToast({
        title: '发生了错误',
        icon: 'none',
        mask: true
      })
    }
  }
  getMoreList () {
    if (+this.orderNum === +this.data.goodsList.length) {
      return lf.toast('没有更多了')
    }
    let start = (++this.start) * this.size
    this.getGoodsList(this.tapStauts, start)
  }
  onPullDownRefresh () {
    this.initData()
    this.getGoodsList(this.tapStauts)
    wx.stopPullDownRefresh()
  }
  initData () {
    this.goodsList = []
    this.start = 0
    this.size = 10
    this.getOrderIndex = null
    this.$apply()
  }
  onReachBottom () {}
  onUnload () {
    this.isPx = false
    this.scrollY = true
    this.goodsList = []
    this.navStatus = [
      {
        id: '',
        text: '全部'
      },
      {
        id: 15,
        text: '已下单'
      },
      {
        id: 11,
        text: '待付款'
      },
      {
        id: 0,
        text: '待客确认'
      }
    ]
    this.tapStauts = -1
    this.rightWidth = 0
    this.isTransparent = true
    this.start = 0
    this.size = 10
    this.orderNum = 0
    this.factory_is_open = false
    this.isOpen = false
    this.getOrderIndex = null
    this.$apply()
  }
}
</script>
