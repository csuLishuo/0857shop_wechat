<style lang="less">
  .btnBox {
    width: 100%;
    height: 90rpx;
    padding: 0 24rpx;
    box-sizing: border-box;
    line-height: 90rpx;
    text-align: center;
    display: flex;
    background: rgba(255, 255, 255, .8);
    justify-content: space-between;
  }

  .pickerBox {
    width: 100%;
    height: 389rpx;
    .picker-item {
      line-height: 70rpx;
      margin-left: 5rpx;
      margin-right: 5rpx;
      text-align: center;
    }
  }

  .code-show {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-direction: column;
    width: 670rpx;
    /*height: 764rpx;*/
    background-color: #ffffff;
    border-radius: 15rpx;
    .show-top {
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      height: 84rpx;
      width: 620rpx;
      border-bottom: 1rpx solid #eee;;
      margin-bottom: 40rpx;
      image {
        position: absolute;
        right: 30rpx;
        top: 30rpx;
        width: 30rpx;
        height: 30rpx;
      }
    }
    .code-content {
      width: 477rpx;
      /*height: 477rpx;*/
    }
    .code-tip {
      margin-top: 35rpx;
      margin-bottom: 25rpx;
      font-size: 28rpx;
      color: #666666;
    }
  }

  .addressBox {

    .addressItem {
      padding: 0 54rpx 0 42rpx;
      .left {
        width: 220rpx;
        height: 100rpx;
        line-height: 100rpx;
        margin-right: 10rpx;
      }
      .right {
        width: 100%;
        height: 100rpx;
        line-height: 100rpx;
        text-align: left;
      }
      .imgs{
        width: 34rpx;
        height: 40rpx;
        align-self: center;
      }
      input {
        text-align: left;
        flex: 1;
        height: 95rpx;
        line-height: 100rpx;
        font-size: 30rpx;
        color: #333333;
      }
    }
    .send-good-info {
      padding-left: 44rpx;
      height: 75rpx;
      line-height: 75rpx;
      background-color: #f5f5f7;
      font-size: 24rpx;
      color: #888888;
    }
    textarea {
      padding: 0 54rpx;
      font-size: 30rpx;
      width: 650rpx;
      height: 168rpx;
      word-wrap: break-word;
      word-break: normal;
    }
    .btn-area {
      display: flex;
      justify-content: center;
      align-items: center;
      width: 100%;
      height: 90rpx;
      background-color: #F5f5f7;
      padding-top: 50rpx;
      padding-bottom: 36rpx;
      .my-button {
        width: 670rpx;
        height: 90rpx;
        color: #fff;
        line-height: 90rpx;
        background-color: #e39f3d;
        border-radius: 10rpx;
      }
    }
  }

  .selectedAddress {
    width: 100%;
    display: flex;
    z-index: 99;
    background-color: #ffffff;
    background: rgba(0, 0, 0, .2);
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: fixed;
    bottom: 0;
    left: 0;
    height: 40vh;
  }

  .tip {
    width: 100%;
    text-align: center;
    font-size: 24rpx;
    color: #666666;
  }

  .margin-t {
    margin-top: 20rpx;
  }

  .bgc-f {
    background-color: #ffffff
  }

  .border-b {
    border-bottom: 1rpx solid #eee;
  }

  .display-flex {
    display: flex;
  }

  .flex-1 {
    flex: 1;
  }

  .c-333 {
    color: #333333;
    font-size: 30rpx;
  }

  .myBorder {
    border-radius: 15rpx;
  }

  .c-gray-time {
    color: #999999;
  }

  .font-s26 {
    font-size: 26rpx;
  }
</style>
<template>
  <view id="AddressAction" style="padding-bottom: {{ isPx? '80rpx': ''}}">
    <view class="addressBox margin-t bgc-f">
      <view class="name addressItem bgc-f border-b display-flex">
        <view class="left c-333 ">客户</view>
        <input type="text" bindinput="InputCustomerName" value="{{customerName}}" placeholder-class="placeholder"
               placeholder="请输入客户姓名"></input>
      </view>
      <view class="phone addressItem bgc-f border-b display-flex">
        <view class="left c-333">客户手机</view>
        <input type="number" bindinput="InputCustomerPhone" value="{{customerPhone}}" maxlength="11"
               placeholder="请输入客户手机号"></input>
      </view>
      <view class="send-good-info">收货信息</view>
      <view class="name addressItem bgc-f border-b display-flex">
        <view class="left c-333 ">收货人</view>
        <input type="text" bindinput="inputUserName" value="{{userName}}" placeholder-class="placeholder"
               placeholder="请输入收货人姓名"></input>
      </view>
      <view class="phone addressItem bgc-f border-b display-flex">
        <view class="left c-333">收货人手机</view>
        <input type="number" bindinput="inputUserPhone" value="{{userPhone}}" maxlength="11"
               placeholder="为空时将使用客户手机号码" />
      </view>
      <view class="address addressItem bgc-f border-b display-flex" @tap.stop="selecteHandle">
        <view class="left c-333">所在地区</view>
        <input type="text" disabled="true"
               value="{{areaInfo}}"
               placeholder-class="placeholder" placeholder="点击选择 ▼" />
        <image @tap.stop="getAddress" class="imgs" src="./../../images/location.png"></image>
      </view>
      <view class="address_detail addressItem bgc-f  display-flex">
        <view class="left c-333">详细地址</view>
        <input type="text" bindinput="inputTextarea" bindblur="saveArea" value="{{textarea}}" placeholder-class="placeholder"
               placeholder="请填写详细地址" />
      </view>
      <map wx:if="{{!isShow && !showCode}}"
           id="myMap"
           latitude="{{latitude}}"
           longitude="{{longitude}}"
           subkey="LYOBZ-CBRRX-YN24R-T63XL-V3433-X7F5J"
           style="width: 100%; height: 250px;"
           markers="{{markers}}"
           show-location
      ></map>
      <view class="btn-area">
        <form report-submit bindsubmit="submitForm">
          <button class="my-button" form-type="submit">请客户确认</button>
        </form>
      </view>
      <!--</form>-->
    </view>
    <view class="tip">请客户用微信扫描生成的二维码确认本次订单</view>
    <van-popup
      show="{{ isShow }}"
      position="bottom"
    >
      <van-area area-list="{{ areaList }}" value="{{ showChangeCode }}" @confirm="change" @cancel="closePick" wx:if="{{areaShow}}"/>
    </van-popup>
    <van-popup
      show="{{ showCode }}"
      @close="closeCode"
      @click-overlay="closeCode"
      custom-class="myBorder"
    >
      <view class="code-show" catchtouchmove='move'>
        <view class="show-top">
          <view class="top-title">生成二维码</view>
          <image @tap.stop="closeCode" src="../../images/close.png"></image>
        </view>
        <image class="code-content" mode="aspectFit" src="{{order_qrcode}}"></image>
        <view class="code-tip">请将手机二维码给客户用微信扫一扫</view>
      </view>
    </van-popup>
    <!--<view></view>-->
  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
import areaList from '@/data/areaList'
import QQMapWX from '@/js/qqmap-wx-jssdk.min.js'

export default class sAddressAction extends wepy.page {
  config = {
    backgroundTextStyle: 'light',
    navigationBarBackgroundColor: '#cf0210',
    navigationBarTitleText: '填写客户信息',
    navigationBarTextStyle: 'white',
    usingComponents: {
      'van-area': '/components/vant/area/index',
      'van-popup': '/components/vant/popup/index'
    }
  }
  components = {}
  data = {
    // 三级联动组件是否可见
    isShow: false,
    areaShow: true,
    // 点击确定是选择的地址信息
    areaInfo: '',
    adcode: '',
    showChangeCode: '',
    showCode: false,
    areaList: areaList,
    order_id: '',
    ids: '',
    order_qrcode: '',
    hiddenValue: '',
    textarea: '',
    customerPhone: '',
    userPhone: '',
    customerName: '',
    userName: '',
    mapCtx: null,
    qqmapsdk: null,
    markers: [],
    latitude: '',
    longitude: '',
    mapTimeouter: null,
    isPx: false,
    hasLocation: false,
    formId: null
  }

  onLoad (option) {
    // let n = lf.user.getOrderTitle(lf.user.getOrderChoose())
    // this.customerName = n
    // this.userName = n
    this.userName = this.customerName = lf.user.getOrderTitle(lf.user.getOrderChoose())
    // 实例化API核心类
    this.isPx = lf.util.isPx(this)
    this.qqmapsdk = new QQMapWX({
      key: 'LYOBZ-CBRRX-YN24R-T63XL-V3433-X7F5J'
    })
    this.mapCtx = wx.createMapContext('myMap')
    this.mapCtx.moveToLocation()
    this.$apply()
    this.getCurrentLocation(true)
  }

  methods = {
    move() {
    },
    getAddress() {
      this.getCurrentLocation(false)
    },
    submitForm: function (e) {
      this.formId = e.detail.formId
      var submitData = {
        customerPhone: this.customerPhone,
        userPhone: this.userPhone,
        customerName: this.customerName,
        userName: this.userName,
        areaInfo: this.areaInfo,
        textarea: this.textarea
      }
      if (!submitData.customerPhone || !/^[1][0-9][0-9]{9}$/.test(submitData.customerPhone)) {
        wepy.showToast({
          title: '请填写合法手机号',
          icon: 'none'
        })
        return
      }
      if (submitData.userPhone.length && !/^[1][0-9][0-9]{9}$/.test(submitData.userPhone)) {
        wepy.showToast({
          title: '请填写合法手机号',
          icon: 'none'
        })
        return
      }
      if (!submitData.areaInfo.length || !submitData.userName.length || !submitData.customerName.length) {
        wepy.showToast({
          title: '客户或收货人信息不全!',
          icon: 'none'
        })
        return
      }
      if (!this.hasLocation) {
        wepy.showToast({
          title: '请重新选择或者输入地址!',
          icon: 'none'
        })
        return
      }
      if (submitData.textarea === '' || !submitData.textarea) {
        return wepy.showToast({
          title: '请填写详情地址!',
          icon: 'none'
        })
      }
      wepy.showLoading({
        title: '加载中...'
      })
      this.updateOrderAddress(submitData)
    },

    InputCustomerName (e) {
      this.customerName = e.detail.value
      this.$apply()
    },

    InputCustomerPhone (e) {
      this.customerPhone = e.detail.value
      this.$apply()
    },
    inputUserName (e) {
      this.userName = e.detail.value
      this.$apply()
    },
    inputUserPhone (e) {
      this.userPhone = e.detail.value
      this.$apply()
    },
    inputTextarea (e) {
      this.textarea = e.detail.value
      this.$apply()
    },
    saveArea () {
      this.tryUpdateLocation()
    },

    change (e) {
      var areaInfo = e.detail.values
      this.areaInfo = `${areaInfo[0].name}-${areaInfo[1].name}-${areaInfo[2].name}`
      this.adcode = areaInfo[2].code
      this.showChangeCode = areaInfo[2].code
      this.isShow = false
      this.hasLocation = true
      if (this.showChangeCode !== this.adcode) {
        this.showChangeCode = this.adcode
      }
      this.$apply()
      setTimeout(() => {
        this.areaShow = false
        this.$apply()
      })
      this.tryUpdateLocation()
    },

    closePick () {
      this.isShow = false
      setTimeout(() => {
        this.areaShow = false
        this.$apply()
      })
    },
    mapchange (e) {
      if (!this.mapCtx) {
        return
      }
      if (e.type === 'end') {
        if (this.mapTimeouter) {
          clearTimeout(this.mapTimeouter)
          this.mapTimeouter = null
        }
        const _this = this
        this.mapTimeouter = setTimeout(() => {
          this.mapCtx.getCenterLocation({
            success: function(res) {
              _this.latitude = res.latitude
              _this.longitude = res.longitude
              _this.hasLocation = true
              if (_this.markers.length > 0) {
                _this.markers = [
                  {
                    id: 1,
                    latitude: res.latitude,
                    longitude: res.longitude
                  }
                ]
                _this.$apply()
              }
            }
          })
        }, 200)
      }
    }
  }

  async updateOrderAddress (submitData) {
    try {
      lf.showLoading()
      let ids = []
      const params = lf.user.getChooseGoodList().map(v => {
        ids.push(v.id)
        return {
          goods_id: v.id,
          number: v.num,
          discount_amount: v.goods_price
        }
      })
      if (!this.order_id) {
        let title = lf.user.getOrderTitle(lf.user.getOrderChoose())
        const res = await lf.net.post('/Api/Order/order_init', {
          goods_json: JSON.stringify(params),
          order_title: title,
          form_id: this.formId
        })
        if (res.code !== 200) {
          lf.toast(res.info)
          return
        }
        this.order_id = res.data.id
        lf.user.clearShop()
      }
      var data = {
        order_id: this.order_id,
        receiver_mobile: submitData.userPhone ? submitData.userPhone : submitData.customerPhone,
        customers_mobile: submitData.customerPhone,
        adcode: this.adcode,
        customers_name: submitData.customerName,
        addr: submitData.textarea,
        location: this.longitude + ',' + this.latitude,
        name: submitData.userName
      }
      const result = await lf.net.post('/Api/Order/order_address_add', data)
      lf.hideLoading()
      if (result.code === 200) {
        const r = await lf.net.post('/Api/Order/order_waiting_customer', {order_id: this.order_id})
        if (r.code === 200) {
          this.showCode = true
          this.order_qrcode = r.data.order_qrcode
          this.getOrderStatus()
          this.$apply()
        } else {
          wepy.showToast({
            title: r.info,
            icon: 'none'
          })
        }
      } else {
        wepy.showToast({
          title: '生成订单出错!',
          icon: 'none'
        })
      }
      this.$apply()
    } catch (err) {
      console.error(err)
      wepy.showToast({
        title: '生成订单异常!',
        icon: 'none'
      })
    }
  }

  selecteHandle () {
    this.areaShow = true
    this.isShow = true
    if (this.showChangeCode !== this.adcode) {
      this.showChangeCode = this.adcode
    }
  }

  closeCode () {
    this.showCode = false
    clearTimeout(this.OrderStatus)
  }

  tryUpdateLocation() {
    if (this.areaInfo.length && this.textarea) {
      var addr = this.areaInfo + this.textarea
      this.updateLocation(addr)
    }
  }
  getCurrentLocation(bol) {
    if (!bol) {
      wepy.showLoading({
        title: '定位中...'
      })
    }
    var that = this
    wx.getLocation({
      type: 'gcj02',
      altitude: true,
      success: function(res) {
        // 2、根据坐标获取当前位置名称，显示在顶部:腾讯地图逆地址解析
        that.qqmapsdk.reverseGeocoder({
          location: {
            latitude: res.latitude,
            longitude: res.longitude
          },
          success: function(addressRes) {
            var code = addressRes.result.ad_info.adcode
            var province = addressRes.result.address_component.province
            var city = addressRes.result.address_component.city
            var district = addressRes.result.address_component.district
            if (bol) {
              that.adcode = code
            } else {
              that.areaInfo = `${province}-${city}-${district}`
              that.hasLocation = true
              that.adcode = code
              if (that.showChangeCode !== that.adcode) {
                that.showChangeCode = that.adcode
              }
              wepy.hideLoading()
            }
            that.$apply()
          }
        })
      },
      fail: function() {
        wepy.showToast({
          title: '抱歉，定位失败',
          icon: 'none'
        })
      }
    })
  }
  updateLocation (address) {
    const _this = this
    this.qqmapsdk.geocoder({
      address: address,
      success: res => {
        if (res.status === 0) {
          const location = res.result.location
          _this.latitude = location.lat
          _this.longitude = location.lng
          _this.markers = [
            {
              id: 1,
              latitude: location.lat,
              longitude: location.lng
            }
          ]
          _this.hasLocation = true
          _this.$apply()
        } else {
          wepy.showToast({
            title: '地址有误,无法获取到经纬度，请重新输入地址!',
            icon: 'none'
          })
        }
      },
      fail: res => {
        console.log(res)
      }
    })
  }

  async getOrderStatus () {
    let self = this
    let result = await lf.net.post('/Api/Order/get_order_status', {
      order_id: self.order_id
    })
    console.log(result)
    if (result.code === 200) {
      // 11是待付款 5是待审核 15是已下单
      if (parseInt(result.data.dealer_status) === 5 || parseInt(result.data.dealer_status) === 11) {
        self.showCode = false
        clearTimeout(this.OrderStatus)
        lf.user.clearShop()
        // wx.navigateBack({
        //   delta: 1
        // })
        wepy.redirectTo({
          url: `../orderApproval?id=${self.order_id}`
        })
      } else {
        this.OrderStatus = setTimeout(this.getOrderStatus.bind(this), 3000)
      }
    } else {
      wepy.showToast({
        title: result.info,
        icon: 'none'
      })
    }
  }
  onUnload () {
    this.showCode = false
    if (this.OrderStatus) {
      clearTimeout(this.OrderStatus)
      this.OrderStatus = null
    }
    this.dataInit()
  }
  dataInit () {
    // 三级联动组件是否可见
    this.isShow = false
    this.areaShow = false
    // 点击确定是选择的地址信息
    this.areaInfo = ''
    this.adcode = ''
    this.showChangeCode = ''
    this.showCode = false
    this.order_id = ''
    this.ids = ''
    this.order_qrcode = ''
    this.hiddenValue = ''
    this.textarea = ''
    this.customerPhone = ''
    this.userPhone = ''
    this.customerName = ''
    this.userName = ''
    this.mapCtx = null
    this.qqmapsdk = null
    this.markers = []
    this.latitude = ''
    this.longitude = ''
    this.mapTimeouter = null
    this.$apply()
  }
  onReady () {
    // this.updateLation()
  }
}
</script>
