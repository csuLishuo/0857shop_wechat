<style lang="scss">
  @import "../../css/common";

  page {
    height: 100%;
  }

  .myResults-container {
    view {
      box-sizing: border-box;
      font-family: PingFangSC-Medium;
    }
    text {
      box-sizing: border-box;
    }
    .swiper-tab {
      width: 100%;
      text-align: center;
      font-size: torpx(30);
      display: flex;
      flex-flow: row;
      justify-content: space-between;
      position: absolute;
      background-color: #cf0210;
      height: torpx(215);
      z-index: 1;
    }
    .swiper-tab-item {
      width: 25%;
      color: #ffffff;
      text-align: center;
      padding: torpx(30) 0 torpx(40);
      box-sizing: border-box;
      text {
        padding-bottom: torpx(15);
      }
    }
    .active {
      color: #fff;
      text {
        border-bottom: torpx(3) solid #fff;
      }
    }

    .swiper-box {
      display: block;
      width: 100%;
      height: 100%;
      text-align: center;
      padding-top: torpx(90);
      box-sizing: border-box;
      overflow: scroll;
      &-item {
        margin-bottom: torpx(20);
        overflow: scroll;
      }
    }
    .myResults-content {
      position: relative;
      padding-top: torpx(250);
      .header {
        padding: 0 torpx(19);
        position: absolute;
        top: torpx(105);
        left: 0;
        width: 100%;
        z-index: 2;
        .contens {
          width: 100%;
          background-color: #fff;
          box-shadow: 0 torpx(3) torpx(7) 0px rgba(0, 0, 0, 0.1);
          border-radius: torpx(10);
          .contens-item {
            list-style: none;
            box-sizing: border-box;
            width: 33.3333%;
            height: torpx(151);
            text-align: center;
            float: left;
            padding: torpx(29) 0 torpx(38);
            text {
              color: #cf0210;
              font-size: torpx(30);
              display: block;
              line-height: torpx(24);
              width: 100%;
            }
            .p-number {
              padding-top: torpx(28);
              font-family: PingFang-SC-Heavy;
              font-size: torpx(36);
              border-right: torpx(1) solid rgba(46, 188, 136, 0.2);
              font-size: torpx(44);
              line-height: torpx(44);
              font-weight: 500;
            }
          }
          .contens-item:last-child {
            .p-number {
              border: none;
            }
          }
        }
      }
      .list {
        padding: 0 torpx(20);
        .list-tab {
          .tab-item {
            float: left;
            text-align: center;
            font-size: torpx(22);
            color: #999;
            padding: torpx(20) 0;
          }
          .tab-item-1 {
            width: 46%;
          }
          .tab-item-2 {
            width: 22%;
          }
          .tab-item-3 {
            width: 16%;
          }
          .tab-item-4 {
            width: 16%;
          }
        }
        .list-content {
          display: flex;
          background-color: #fff;
          border-radius: torpx(5);
          margin-bottom: torpx(3);
          padding: torpx(22) 0;
          position: relative;
          .content-item {
            text-align: center;
            font-size: torpx(24);
            color: #333;
            word-wrap: break-word;
            display: flex;
            align-items: center;
            justify-content: center;
            word-wrap: break-word;
            word-break: normal;
            flex-wrap: wrap;
            word-break: break-all;
          }
          .content-item-1 {
            text-align: left;
            padding-left: torpx(20);
            justify-content: flex-start;
            flex: 4.6 0 0;
            .rank {
              color: #666;
              font-size: torpx(45);
              font-style: italic;
              padding-right: torpx(20);
              font-family: SavoyeLetPlain;
            }
            .header-view {
              left:torpx(100);
              position: absolute;
              width: torpx(64);
              margin-left:torpx(-32);
              height: torpx(24);
              line-height: torpx(24);
              background: #666666;
              border-radius: 5px;
              bottom: torpx(0);
              font-size: torpx(18);
              color: #fff;
              text-align: center;
            }
            .nickname {
              line-height: torpx(30);
              font-size: torpx(26);
            }
          }
          .zy {
            width: torpx(75);
            height: torpx(75);
            position: absolute;
            display: block;
            right: 0;
            top: 0;
          }
          .content-item-2 {
            font-weight: 500;
            flex: 2.2 0 0;
          }
          .content-item-3 {
            font-weight: 500;
            flex: 1.6 0 0;
          }
          .content-item-4 {
            color: #999;
            flex: 1.6 0 0;
          }
        }
      }
      .btn {
        margin: torpx(20);
        height: torpx(118);
        border-radius: torpx(5);
        background-color: #fff;
        line-height: torpx(118);
        color: #333;
        font-size: torpx(28);
        text-align: center;
        position: relative;
        padding-left: torpx(30);
        text {
          font-size: torpx(70);
          color: #2ebc88;
          position: absolute;
          top: torpx(50);
          left: torpx(224);
          transform: translateY(-50%);
          height: 100%;
        }
      }
    }
  }
</style>
<template>
  <view class="myResults-container">
    <view class="swiper-tab">
      <view class="swiper-tab-item {{currentTab==0?'active':''}}" data-current="0" bindtap="clickTab(0)">
        <text>本月</text>
      </view>
      <view class="swiper-tab-item {{currentTab==1?'active':''}}" data-current="1" bindtap="clickTab(1)">
        <text>本季度</text>
      </view>
      <view class="swiper-tab-item {{currentTab==2?'active':''}}" data-current="2" bindtap="clickTab(2)">
        <text>本年度</text>
      </view>
      <view class="swiper-tab-item {{currentTab==3?'active':''}}" data-current="3" bindtap="clickTab(3)">
        <text>全部</text>
      </view>
    </view>
    <view class="myResults-content" wx:for="{{array}}" wx:for-item="item" wx:for-index="index" wx:key="unique"
          wx:if="{{currentTab === index}}">
      <view class="header">
        <view class="contens clearfix">
          <view class="contens-item">
            <text>销售额</text>
            <text class="p-number"> {{total_amount}}</text>
          </view>
          <view class="contens-item">
            <text>客户数</text>
            <text class="p-number"> {{customer_cnt}}</text>
          </view>
          <view class="contens-item">
            <text>成交订单数</text>
            <text class="p-number"> {{order_cnt}}</text>
          </view>
        </view>
      </view>
      <view class="list">
        <view class="list-tab clearfix" wx:if="{{members.length >0}}">
          <view class="tab-item tab-item-1"></view>
          <view class="tab-item tab-item-2">销售额</view>
          <view class="tab-item tab-item-3">客户数</view>
          <view class="tab-item tab-item-4">成交订单数</view>
        </view>
        <view class="list-content" wx:for="{{members}}" wx:for-item="item" wx:key="unique"
              @tap="openMune({{item.id}}, {{item.saler_name}}, {{item.status}}, {{item.mid}})">
          <view class="content-item content-item-1">
            <text class="rank">{{index+1}}.</text>
            <view class="header-view" wx:if="{{item.status == 0}}">
              <!--<image class='header-image' src="{{item.avatar? item.avatar: cusimage}}"></image>-->
              <view class="lz">{{item.status == 0 ? '已离职' : ''}}</view>
            </view>
            <text class="nickname">{{item.saler_name}}</text>
          </view>
          <view class="content-item content-item-2">{{item.performance.total_amount || 0}}</view>
          <view class="content-item content-item-3">{{item.performance.customer_cnt}}</view>
          <view class="content-item content-item-4">{{item.performance.order_cnt}}</view>
          <image class="zy" src="{{item.working_type == 1 ? './../images/qz.png' : './../images/jz.png'}}"></image>
        </view>
      </view>
      <view class="btn" @tap="add">
        <text>+</text>
        新增一个销售
      </view>
    </view>
    <van-action-sheet
      show="{{ muneShow }}"
      actions="{{ actions }}"
      close-on-click-overlay="{{true}}"
      cancel-text="{{chooseName}}"
      @close="onClose"
      @select="onSelect"
      @cancel="onClose"
    >
    </van-action-sheet>

  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'

export default class Myresults extends wepy.page {
  config = {
    navigationBarTitleText: '团队与业绩',
    navigationBarTextStyle: 'white',
    backgroundTextStyle: 'light',
    backgroundColor: '#2ebc88',
    navigationBarBackgroundColor: '#cf0210',
    usingComponents: {
      'van-action-sheet': '/components/vant/action-sheet/index'
    }
  }
  data = {
    array: [0, 1, 2, 3],
    currentTab: 0,
    members: [],
    total_amount: '',
    customer_cnt: '',
    order_cnt: '',
    cusimage: '../images/salesman/user_default_avatar.png',
    actions: [
      {name: '正常', value: 1},
      {name: '离职', value: 2}
      // {name: '禁用', value: 3}
    ],
    chooseId: '',
    muneShow: false,
    chooseName: ''
  }

  computed = {}

  methods = {
    openMune (id, name, status, mid) {
      if (Number(mid) === Number(lf.storage.get('mid'))) {
        return
      }
      this.chooseId = id
      this.chooseName = name
      if (Number(status) === 1) { // 正常
        this.actions = [
          {name: '正常', value: 1, disabled: true},
          {name: '离职', value: 2}
          // {name: '禁用', value: 3}
        ]
      } else {
        this.actions = [
          {name: '正常', value: 1},
          {name: '离职', value: 2, disabled: true}
          // {name: '禁用', value: 3, disabled: true}
        ]
      }
      this.muneShow = true
    },
    async onSelect (event) {
      console.log(event.detail)
      wepy.showLoading({
        title: '提交中...'
      })
      var index = event.detail.value
      try {
        const res = await lf.net.post('/Api/saler/saler_status', {
          id: this.chooseId,
          status: index === 2 || index === 3 ? 0 : 1
        })
        if (res.code === 200) {
          wepy.showToast({
            title: '操作成功',
            icon: 'none'
          })
          let types = 0
          switch (this.currentTab) {
            case 0:
              types = 0
              break
            case 1:
              types = 10
              break
            case 2:
              types = 20
              break
            case 3:
              types = 100
              break
            default:
          }
          this.getDatas(types)
        } else {
          wepy.showToast({
            title: res.info,
            icon: 'none'
          })
        }
      } catch (e) {
        console.error(e)
        wepy.showToast({
          title: '操作失败',
          icon: 'none'
        })
      } finally {
        wepy.hideLoading()
        this.muneShow = false
      }
    },
    onClose () {
      this.muneShow = false
      this.chooseId = ''
    },
    add () {
      wepy.navigateTo({
        url: 'addSales'
      })
    },
    clickTab (number) {
      if (this.currentTab === Number(number)) {
        return false
      } else {
        let types
        this.currentTab = Number(number)
        switch (this.currentTab) {
          case 0:
            types = 0
            break
          case 1:
            types = 10
            break
          case 2:
            types = 20
            break
          case 3:
            types = 100
            break
          default:
        }
        this.getDatas(types)
      }
      this.$apply()
    }
  }
  events = {}

  async getDatas (type) {
    try {
      const res = await lf.net.post('/Api/dealer/performance', {
        type: type
      })
      if (res.code === 200) {
        this.total_amount = res.data.performance.total_amount || 0
        this.customer_cnt = res.data.performance.customer_cnt || 0
        this.order_cnt = res.data.performance.order_cnt || 0
        res.data.members.forEach(v => {
          if (v.member_info) {
            v.avatar = v.member_info.avatar
          } else {
            v.avatar = ''
          }
        })
        this.members = res.data.members || []
        this.$apply()
      } else {
        wepy.showToast({
          title: res.info,
          icon: 'none'
        })
      }
    } catch (e) {
      wepy.showToast({
        title: '操作失败',
        icon: 'none'
      })
    }
  }

  onLoad () {
  }

  onShow () {
    this.getDatas(0)
  }
}
</script>
