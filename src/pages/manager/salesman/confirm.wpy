<style lang="scss">
  @import "../../../css/common";

  .comfirm-container {
    .top {
      display: flex;
      align-items: center;
      font-size: torpx(28);
      color: #333333;
      margin: 0 torpx(40);
      padding: torpx(20) 0;
      height: torpx(132);
      .name {
        margin-right: torpx(17);
      }
      .header {
        width: torpx(68);
        height: torpx(68);
        margin-right: torpx(15);
        border-radius: 50%;
      }
    }
    .ct {
      background: #ffffff;
      margin: 0 torpx(40);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      padding: torpx(50) 0;
      border-radius: torpx(15);
      .header {
        display: block;
        overflow: hidden;
        border-radius: 50%;
        width: torpx(194);
        height: torpx(194);
      }
      .name {
        font-size: torpx(36);
        color: #000000;
        line-height: torpx(36);
        margin: torpx(25) 0;
        margin-bottom: torpx(10);
      }
      .tel {
        font-family: SavoyeLetPlain;
        font-size: torpx(40);
        color: #333333;
        line-height: 1;
      }
      .pic {
        width: torpx(242);
        height: torpx(122);
        display: inline-block;
        margin-top: torpx(50);
      }
      .rank {
        font-size: torpx(28);
        color: #666666;
        margin-bottom: torpx(28);
      }
      .address {
        font-size: torpx(28);
        color: #999999;
        margin-bottom: torpx(28);
        .pro {
          margin-right: torpx(20);
        }
      }
    }
    .bottom {
      button {
        width: torpx(670);
        height: torpx(90);
        background-color: #cf0210;
        border-radius: torpx(10);
        margin: 0 auto;
        margin-top: torpx(30);
        color: #ffffff;
      }
      .tip {
        color: #666666;
        font-size: torpx(24);
        line-height: 1;
        margin-top: torpx(26);
        text-align: center;
      }
    }
  }
</style>
<template>
  <view class="comfirm-container">
    <view class="top">
      <image class="header" src="{{info.dealerImg ? info.dealerImg : '../../../images/user_default_avatar.png'}}"></image>
      <view class="name">{{info.dealerName}}</view>
      <view class="text">邀请您加入销售团队</view>
    </view>
    <view class="ct">
      <open-data class="header" type="userAvatarUrl"></open-data>
      <!--<image class="header" src="../../images/icon-1.png"></image>-->
      <view class="name">{{info.salerName}}</view>
      <view class="rank">{{info.salerRank}}</view>
      <view class="address">
        <open-data class="pro" type="userProvince" lang="zh_CN"></open-data>
        <open-data class="" type="userCity" lang="zh_CN"></open-data>
      </view>
      <view class="tel">{{info.salerPhone}}</view>
      <image class="pic" src="../../../images/hz.png"></image>
    </view>
    <view class="bottom">
      <button bindgetuserinfo="getUser" open-type="getUserInfo">确认我的信息,接受邀请</button>
      <view class="tip">接收邀请后即可开展货品销售工作</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'

export default class Confirm extends wepy.page {
  config = {
    navigationBarTitleText: '确认销售身份',
    usingComponents: {}
  }
  components = {}
  data = {
    cacheId: '',
    info: {
      dealerId: '',
      dealerName: '',
      // dealerImg: 'https://wx.qlogo.cn/mmopen/vi_32/icp95OaLHbyRLDTiaYNkEh4k7zljpgeptSRedx1IMib1ibs20ysCviba74kyK2HmN7d8bH5rAN8ibricy7hNjU96cJG8g/132',
      dealerImg: '',
      salerName: '',
      salerPhone: '',
      salerRank: '',
      workingType: ''
    }
  }

  async getUser (res) {
    let userInfo = res.detail.userInfo
    if (res.detail.encryptedData) {
      userInfo.encryptedData = res.detail.encryptedData
      userInfo.iv = res.detail.iv
    }
    wepy.showLoading({
      title: '提交中...'
    })
    try {
      let loginRes = await wepy.login()
      userInfo = await wepy.getUserInfo()
      let u = await lf.net.post('/Api/public/open_id', {
        code: loginRes.code,
        encryptedData: userInfo.encryptedData,
        iv: userInfo.iv
      })
      if (u.code !== 200) {
        wepy.showToast({
          title: u.info,
          icon: 'none'
        })
        return
      }
      lf.storage.set('mid', u.data.mid)
      const userData = await lf.net.post('/api/saler/saler_open', {
        dealer_id: this.info.dealerId,
        mobile: this.info.salerPhone,
        saler_name: this.info.salerName,
        working_type: this.info.workingType,
        saler_rank: this.info.salerRank
      })
      if (userData.code === 200) {
        lf.user.save(userData.data)
        wepy.hideLoading()
        wepy.reLaunch({
          url: '../../home'
        })
      } else {
        wepy.showToast({
          title: userData.info,
          icon: 'none'
        })
      }
      wepy.hideLoading()
    } catch (e) {
      wepy.showToast({
        title: '操作失败',
        icon: 'none'
      })
      wepy.hideLoading()
      console.error(e)
    }
  }

  toText (data) {
    if (data === '') {
      return ''
    }
    data = data.split('\\u')
    var str = ''
    for (let i = 0; i < data.length; i++) {
      if (!data[i]) {
        continue
      }
      str += String.fromCharCode(parseInt(data[i], 16).toString(10))
    }
    return str
  }

  async init () {
    try {
      const res2 = await lf.net.post('/Api/public/cache_info', {
        cache_id: this.cacheId
      })
      const res = await lf.net.post('/api/saler/dealer_info', {
        dealer_id: this.info.dealerId
      })
      if (res2.code === 200) {
        this.info.salerName = res2.data.name // 销售员姓名
        this.info.salerRank = res2.data.saler_rank // 职称
        this.info.workingType = res2.data.working_type // 兼职还是全职
        this.info.salerPhone = res2.data.mobile // 手机号
        this.$apply()
      } else {
        wepy.showToast({
          title: res.info,
          icon: 'none'
        })
      }
      if (res.code === 200 && res.data) {
        this.info.dealerImg = res.data.avatar
        this.info.dealerName = res.data.dealer_contact
        this.$apply()
      } else {
        wepy.showToast({
          title: res.info,
          icon: 'none'
        })
      }
    } catch (e) {
      wepy.showToast({
        title: '查询失败',
        icon: 'none'
      })
    }
  }
  onLoad (options) {
    let query = options
    this.info.dealerId = query.dealer_id
    this.cacheId = query.cache_id
    this.init()
  }

  methods = {}
}
</script>
