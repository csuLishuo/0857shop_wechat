<style lang="scss">
  @import "../../css/common";

  page {
    height: 100%;
  }

  .customers-container {
    height: 100vh;
    position: relative;
    .scrollView {
      position: absolute;
      top: 0;
      bottom: torpx(377);
    }
    /*padding-bottom: torpx(377);*/
    .orderList {
      padding: 0 torpx(30);
      background: #fff;
      .djdj {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 100%;
        background-color: #cf000e;
        color: #fff;
        box-sizing: border-box;
        padding:0 15rpx;
        font-size: 26rpx;
      }
      .wrapper {
        padding: torpx(30) 0;
        border-bottom: torpx(1) solid #eee;
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: space-between;
        .img-box {
          width: 119rpx;
          height: 120rpx;
          overflow: hidden;
          border: 1rpx solid rgba(221, 221, 221, 1);
          border-radius: 10rpx;
          image {
            width: torpx(119);
            height: torpx(120);
          }
        }
        .detail {
          width: 498rpx;
          .title {
            line-height: 38rpx;
            height: 76rpx;
            text-align: justify;
            font-size: 28rpx;
            font-weight: bold;
          }
          .label {
            font-size: 24rpx;
            width: 100%;
            .price {
              color: #f2441c;
              float: right;
              font-size: 30rpx;
            }
            .num {
              float: left;
              color: #999;
            }
          }
        }
      }
      .box {
        background: #fff;
        padding: 33rpx 0;
        width: 100%;
        .wrapper-box {
          width: 33.3%;
          box-sizing: border-box;
          text-align: center;
          float: left;
          &.center {
            border-left: 1rpx solid #EEEEEE;
            border-right: 1rpx solid #EEEEEE;
          }
          .title {
            color: #999999;
            font-size: 24rpx;
            line-height: 30rpx;
          }
          .detail {
            color: #333333;
            font-size: 30rpx;
            line-height: 30rpx;
            margin-top: 25rpx;
          }
          .detail.price {
            color: #F2441C;
          }
        }
      }
    }
    .mjconfirm-btn {
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: #fff;
      width: 100%;
      .inline {
        height: torpx(377);
        overflow: hidden;
        background-color: #fff;
        box-sizing: border-box;
        width: 100%;
        position: relative;
        .label {
          padding: 0 33rpx;
          box-sizing: border-box;
          .label-item {
            color: #333;
            font-size: 36rpx;
            width: 100%;
            padding-top: 40rpx;
            box-sizing: border-box;
            .price {
              float: right;
              font-size: 36rpx;
              color: #F2441C;
              font-weight: 600;
            }
            .date {
              float: right;
              font-size: 36rpx;
              color: #333;
              border-bottom: 1rpx solid #eee;
              padding-bottom: 10rpx;
              font-weight: 600;
            }
            .price_border {
              border-bottom: 1rpx solid #eee;
              padding-bottom: 10rpx;
            }
          }
          .last-label {
            padding-bottom: 40rpx;
            padding-top:30rpx;
          }
          .sec-label{
            padding-top:30rpx;
          }
        }
        button {
          height: 90rpx;
          line-height: 90rpx;
          background-color: #cf000e;
          text-align: center;
          font-size: 32rpx;
          color: #fff;
          outline: none;
          border-radius: 0;
          position: absolute;
          left: 0;
          bottom: 0;
          width: 100%;
        }
      }
    }
    .tz-view {
      width: torpx(670);
      box-sizing: border-box;
      padding: torpx(25);
      & > .title {
        height: torpx(84);
        text-align: center;
        line-height: torpx(84);
        border-bottom: torpx(1) solid #dddddd;
        position: relative;
        .close {
          position: absolute;
          right: torpx(30);
          top: torpx(5);
          width: torpx(27);
          height: torpx(27);
          z-index: 100;
          box-sizing: content-box;
          padding:torpx(20);
        }
      }
      .wrapper {
        display: flex;
        padding: torpx(36) 0;
        border-bottom: torpx(1) solid #dddddd;
        .detail {
          flex: 1;
          .title {
            font-size: torpx(28);
            color: #000;
          }
          .price {
            color: #F2441C;
            font-size: torpx(22);
          }
        }
        .num {
          font-size: torpx(22);
          color: #999999;
        }
      }
      .img-box {
        image {
          width: torpx(94);
          height: torpx(94);
          margin-right: torpx(15);
        }
      }
      .input-view {
        border-radius: torpx(15);
        display: flex;
        align-items: center;
        padding: torpx(28) 0;
        .tip {
          flex: 1;
        }
        input {
          width: torpx(209);
          height: torpx(66);
          line-height: torpx(66);
          background: rgba(255, 255, 255, 1);
          border: 1px solid rgba(204, 204, 204, 1);
          border-radius: 5px;
          margin-right: torpx(20);
          font-size: torpx(28);
          box-sizing: border-box;
          padding: 0 torpx(20);
        }
        text {
          font-size: torpx(24);
          color: #000000;
          &.dw {
            color: #999999;
          }
        }
      }
      .save {
        margin-top: torpx(69);
        width: 100%;
        height: torpx(90);
        line-height: torpx(90);
        background:#cf000e;
        border-radius: torpx(10);
        font-size: torpx(32);
        color: #ffffff;
      }
    }
    .orderInfo{
      background: #cf000e;
      padding:0 30rpx;
      .line{
        box-sizing: border-box;
        line-height: 46rpx;
        padding:17rpx 0;
        font-size: 30rpx;
        color: #fff;
        border-bottom: 1rpx solid rgba(255, 255, 255, 0.2);
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        justify-content: space-between;
        &.addr{
          border-bottom: none;
          .detail{
            width: 478rpx;
            text-align: right;
            max-height: 92rpx;
            overflow: hidden;
          }
        }
      }
    }
    .newwwbox{
      display: flex;
      flex-direction: row;
      align-items: flex-start;
      justify-content: space-between;
      background: #ba000d;
      padding:35rpx 0;
      .wrapper{
        width: 33.3%;
        box-sizing: border-box;
        text-align: center;
        &.center{
          border-left: 1rpx solid #cf000e;
          border-right: 1rpx solid #cf000e;
        }
        .title{
          color: rgba(255, 255, 255, 0.5);
          font-size: 24rpx;
          line-height: 30rpx;
        }
        .detail{
          color: #fff;
          font-size: 30rpx;
          line-height: 36rpx;
          margin-top: 20rpx;
          word-break:break-all;
          text{
            font-size: 24rpx;
          }
        }
      }
    }
  }

  .xmjconfirm-container {
    .scrollView {
      position: absolute;
      top: 0;
      bottom: torpx(457);
    }
    .mjconfirm-btn {
      padding-bottom: torpx(80);
    }
  }
</style>
<template>
  <view class="customers-container {{isPx ? 'xmjconfirm-container' : ''}}">
    <scroll-view scroll-y="true" class="scrollView">
      <view class="orderInfo">
        <view class="line">
          <view class="title">订单号</view>
          <view class="detail">{{detailData.order_no}}</view>
        </view>
        <view class="line">
          <view class="title">客户</view>
          <view class="detail">{{detailData.customers_name}}</view>
        </view>
        <view class="line">
          <view class="title">状态</view>
          <view class="detail">{{detailData.mt_status_text}}</view>
        </view>
        <view class="line">
          <view class="title">电话</view>
          <view class="detail" wx:if="{{detailData.receiver_mobile !== ''}}" @tap="toTel({{detailData.receiver_mobile}})">{{detailData.receiver_mobile}}</view>
          <view class="detail" wx:else @tap="toTel({{detailData.customers_mobile}})">{{detailData.customers_mobile}}</view>
        </view>
        <view class="line">
          <view class="title">经销商</view>
          <view class="detail">{{detailData.dealer_name}}</view>
        </view>
        <view class="line addr">
          <view class="title">所属经销商</view>
          <view class="detail">{{detailData.dealer_info}}</view>
        </view>
      </view>
      <view class="newwwbox">
        <view class="wrapper">
          <view class="title">销售员</view>
          <view class="detail">{{detailData.saler_name}}</view>
        </view>
        <view class="wrapper center">
          <view class="title">货品总数</view>
          <view class="detail">{{sum}}<text>件</text></view>
        </view>
        <view class="wrapper">
          <view class="title">订单总价</view>
          <view class="detail">{{detailData.factory_amount}}<text>元</text></view>
        </view>
      </view>
      <view class="orderList">
        <view wx:for="{{detailData.order_item_list}}" wx:for-item="item" wx:key="item.id">
          <van-swipe-cell right-width="{{ 65 }}">
            <van-cell-group>
              <view class="wrapper">
                <view class="img-box">
                  <image src="{{item.goods_cover_url}}" alt=""></image>
                </view>
                <view class="detail">
                  <view class="title ellipsis-2">{{item.goods_title}}</view>
                  <view class="label clearfix">
                    <text class="num">数量x{{item.number}}</text>
                    <text class="price">￥{{item.factory_amount}}</text>
                  </view>
                </view>
              </view>
            </van-cell-group>
            <view class="djdj" slot="right" @tap="tzdj({{index}})">调整订金</view>
          </van-swipe-cell>
          <view class="box clearfix">
            <view class="wrapper-box">
              <view class="title">类型</view>
              <view class="detail" style="font-weight: 600">{{item.goods_cate}}</view>
            </view>
            <view class="wrapper-box center">
              <view class="title">定金</view>
              <view class="detail">￥{{item.deposit_amount * item.number}}</view>
            </view>
            <view class="wrapper-box">
              <view class="title">总价</view>
              <view class="detail price">{{item.factory_all_amount}}</view>
            </view>
          </view>
        </view>
      </view>
    </scroll-view>
    <view class="mjconfirm-btn">
      <view class="inline">
        <view class="label">
          <view class="label-item clearfix">
            订单总额
            <text class="price">￥{{detailData.factory_amount}}</text>
          </view>
          <view class="label-item sec-label clearfix">
            定金总额
            <text class="price price_border">￥{{totalDJ}}</text>
          </view>
          <view class="label-item last-label clearfix" @tap="xgjy">
            交付周期
            <text class="date">{{detailData.interaction_cycle}}天</text>
          </view>
        </view>
        <button @tap="comfie">确定</button>
      </view>
    </view>
    <van-popup show="{{ show }}" custom-style="Tjauto" z-index="9999" catch:close="onClose">
      <view class="tz-view">
        <view class="title">
          调价
          <image @tap="close" class="close" src="../../images/customer/close.png"></image>
        </view>
        <view class="wrapper">
          <view class="img-box">
            <image src="{{choose.goods_cover_url}}" alt=""></image>
          </view>
          <view class="detail">
            <view class="title ellipsis-2">{{choose.goods_title}}</view>
            <text class="price">￥{{choose.factory_amount}}</text>
          </view>
          <text class="num">x{{choose.number}}</text>
        </view>
        <view class="input-view">
          <text class="tip">将订金调整为：</text>
          <view class="iv">
            <input type="number" value="{{choose.deposit_amount}}" bindinput="aBlur" />
          </view>
          <text class="dw">元</text>
        </view>
        <button class="save" @tap="changeDJ">确认修改</button>
      </view>
    </van-popup>
    <van-popup show="{{ show2 }}" custom-style="Tjauto" z-index="9999" catch:close="onClose">
      <view class="tz-view">
        <view class="title">
          调整周期
          <image @tap="close2" class="close" src="../../images/customer/close.png"></image>
        </view>
        <view class="input-view">
          <text class="tip">将交付周期为：</text>
          <view class="iv">
            <input type="number" value="{{detailData.interaction_cycle}}" bindinput="zBlur" />
          </view>
          <text class="dw">天</text>
        </view>
        <button class="save" @tap="saveZ">确认修改</button>
      </view>
    </van-popup>
  </view>
</template>

<script>
import wepy from 'wepy'
import lf from 'lf'
import CommonMixin from '../../mixins/common'

export default class confirmOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
    navigationBarTextStyle: 'white',
    backgroundTextStyle: 'light',
    backgroundColor: '#cf000e',
    navigationBarBackgroundColor: '#cf000e',
    disableScroll: true,
    usingComponents: {
      'van-popup': '/components/vant/popup/index',
      'van-cell-group': '/components/vant/cell-group/index',
      'van-swipe-cell': '/components/vant/swipe-cell/index'
    }
  }
  mixins = [CommonMixin]
  data = {
    show: false,
    show2: false,
    detailData: [],
    choose: {},
    detailId: '',
    oldAmount: '',
    oldZQ: '',
    sum: 0
  }

  computed = {
    totalAmount () {
      const list = this.detailData.order_item_list || []
      let sum = 0
      list.forEach(v => {
        sum = sum + Number(v.factory_all_amount)
      })
      return sum
    },
    totalDJ () {
      const list = this.detailData.order_item_list || []
      let sum = 0
      list.forEach(v => {
        sum = lf.util.addNum(sum, lf.util.multNum(v.deposit_amount, v.number))
      })
      return sum
    }
  }

  methods = {
    close2 () {
      this.show2 = false
      this.detailData.interaction_cycle = this.oldZQ
      this.$apply()
    },
    xgjy () {
      this.show2 = true
      this.oldZQ = this.detailData.interaction_cycle
      this.$apply()
    },
    zBlur (e) {
      this.detailData.interaction_cycle = e.detail.value
      this.$apply()
    },
    async saveZ () {
      var reg = /^\+?[1-9][0-9]*$/
      if (!reg.test(this.detailData.interaction_cycle)) {
        this.detailData.interaction_cycle = this.oldZQ
        this.$apply()
        wepy.showToast({
          title: '请输入整数',
          icon: 'none'
        })
        return
      }
      try {
        const res = await lf.net.post('/Api/Factory/set_interaction_cycle', {
          order_id: this.detailData.id,
          interaction_cycle: this.detailData.interaction_cycle
        })
        if (res.code === 200) {
          this.show2 = false
          this.$apply()
          this.init()
          wepy.showToast({
            title: '操作成功',
            icon: 'none'
          })
        } else {
          wepy.showToast({
            title: res.info,
            icon: 'none'
          })
        }
      } catch (e) {
        console.error(e)
        wepy.showToast({
          title: '操作错误',
          icon: ''
        })
      }
    },
    toTel (number) {
      wepy.makePhoneCall({
        phoneNumber: String(number)
      })
    },
    tzdj (index) {
      this.show = true
      this.choose = this.detailData.order_item_list[index]
      this.oldAmount = this.choose.deposit_amount
      this.$apply()
    },
    close () {
      this.show = false
      this.choose.deposit_amount = this.oldAmount
      this.choose = {}
    },
    async changeDJ () {
      const reg = /(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/
      let value = this.choose.deposit_amount
      if (!reg.test(value)) {
        this.choose.deposit_amount = this.oldAmount
        this.$apply()
        wepy.showToast({
          title: '请输入正确金额',
          icon: 'none'
        })
        return
      }
      if (Number(value) > Number(this.choose.factory_amount)) {
        this.choose.deposit_amount = this.oldAmount
        this.$apply()
        wepy.showToast({
          title: '不能大于总价',
          icon: 'none'
        })
        return
      }
      try {
        const res = await lf.net.post('/Api/Factory/order_item_update', {
          order_item_id: this.choose.id,
          deposit_amount: this.choose.deposit_amount
        })
        if (res.code === 200) {
          this.show = false
          this.choose = {}
          this.$apply()
          this.init()
          wepy.showToast({
            title: '操作成功',
            icon: 'none'
          })
        } else {
          wepy.showToast({
            title: res.info,
            icon: 'none'
          })
        }
      } catch (e) {
        console.error(e)
        wepy.showToast({
          title: '操作错误',
          icon: ''
        })
      }
    },
    aBlur (e) {
      const value = e.detail.value
      this.choose.deposit_amount = value
      this.$apply()
    },
    async comfie () {
      wepy.showLoading({
        title: '提交中...'
      })
      try {
        const res = await lf.net.post('/Api/Factory/order_check_commit', {
          id: this.detailData.id
        })
        wepy.hideLoading()
        if (res.code === 200) {
          this.show = false
          this.choose = {}
          this.$apply()
          wepy.showToast({
            title: '操作成功'
          })
          setTimeout(() => {
            wepy.navigateBack()
          }, 800)
        } else {
          wepy.showToast({
            title: res.info,
            icon: 'none'
          })
        }
      } catch (e) {
        console.error(e)
        wepy.hideLoading()
        wepy.showToast({
          title: '操作错误',
          icon: ''
        })
      }
    }
  }
  events = {}

  async init () {
    this.getDetail()
  }

  async getDetail () {
    let result = await lf.net.post('/Api/Factory/order_detail', {
      order_id: this.detailId
    })
    if (result.code === 200) {
      this.detailData = result.data
      this.getSum(this.detailData.order_item_list)
      this.$apply()
    } else {
      wepy.showToast({
        title: result.info,
        icon: 'none'
      })
    }
  }

  getSum (list) {
    this.sum = 0
    for (let i = 0; i < list.length; i++) {
      this.sum += parseInt(list[i].number)
    }
  }

  onLoad (options) {
    this.detailId = options.id
    this.init()
  }
}
</script>
