<style lang='scss'>
  .container {
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
    box-sizing: border-box;
  }
  view, input{
    display: block;
    box-sizing: border-box;
  }
  image{
    display: block;
  }
  page {
    background: #f5f5f7;
  }

  .ellipsis-1 {
    display: -webkit-box;
    overflow: hidden;
    white-space: normal !important;
    text-overflow: ellipsis;
    word-wrap: break-word;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
  }

  .ellipsis-2 {
    display: -webkit-box;
    overflow: hidden;
    white-space: normal !important;
    text-overflow: ellipsis;
    word-wrap: break-word;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }

  .clearfix:before {
    display: table;
    content: '';
  }

  .clearfix:after {
    display: table;
    content: '';
    clear: both;
  }

  .page-container {
    position: relative;
    &.is-px {
      padding-bottom: 0;
    }
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'
import lf from 'lf'
import { fireEvent, EVENT, TYPES } from './js/event'
import QQMapWX from '@/js/qqmap-wx-jssdk.min.js'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/home',
      'pages/categoryPage',
      'pages/shopCart',
      'pages/myCenter',
      'pages/signIn', // 签到
      'pages/lottery', // 抽奖
      'pages/mission', // 任务
      'pages/groupBuyList', // 团购
      'pages/detail_groupBuy', // 团购商品详情
      'pages/seckillList', // 秒杀
      'pages/detail_seckill', // 秒杀商品详情
      'pages/barginList', // 砍价
      'pages/detail_bargin', // 砍价商品详情
      'pages/stepCount', // 计步
      'pages/detailPage', // 商品详情
      'pages/test'
    ],
    window: {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#ffffff',
      navigationBarTitleText: '0857主商城',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      'color': '#999999',
      'selectedColor': '#cf0210',
      'borderStyle': 'black',
      'backgroundColor': '#ffffff',
      'list': [
        {
          'pagePath': 'pages/home',
          'iconPath': 'images/icon1.png',
          'selectedIconPath': 'images/icon1_on.png',
          'text': '首页'
        },
        {
          'pagePath': 'pages/categoryPage',
          'iconPath': 'images/icon2.png',
          'selectedIconPath': 'images/icon2_on.png',
          'text': '产品'
        },
        {
          'pagePath': 'pages/shopCart',
          'iconPath': 'images/icon3.png',
          'selectedIconPath': 'images/icon3_on.png',
          'text': '购物车'
        },
        {
          'pagePath': 'pages/myCenter',
          'iconPath': 'images/icon4.png',
          'selectedIconPath': 'images/icon4_on.png',
          'text': '我的'
        }
      ]
    },
    plugins: {},
    permission: {
      'scope.userLocation': {
        desc: '你的位置信息将用于地址位置/门店选择'
      }
    }
  }
  globalData = {
    isIpx: false,
    isKD: false,
    scene: 1001,
    orderRedDot: false,
    refundInfo: null,
    returnOrderId: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify')
  }

  async initArea () {
    this.qqmapsdk = new QQMapWX({
      key: 'LYOBZ-CBRRX-YN24R-T63XL-V3433-X7F5J'
    })
    try {
      const loc = await wepy.getLocation({
        type: 'gcj02'
      })
      const {latitude, longitude} = loc
      const res = await lf.net.post('/Api/Dealer/dealer_list', {
        latitude,
        longitude
      })
      if (res.code === 200 && res.data && res.data.list && res.data.list.length > 0) {
        const obj = res.data.list[0]
        lf.user.setStore(obj)
      }
    } catch (e) {
      console.error(e)
      // lf.toast('定位出错')
    }
  }

  async showOrderRedDot () {
    if (!lf.user.isLogin() && this.globalData.orderRedDot) {
      await wepy.hideTabBarRedDot({
        index: 3
      })
      return false
    }
    if (!lf.user.isLogin()) {
      return false
    }
    let res = false
    let res2 = false
    try {
      if (lf.user.getRole() <= 20) {
        const r1 = await lf.net.post('/Api/Order/order_list', {
          order_status: '10,30'
        })
        if (r1.code === 200 && r1.data && r1.data.list && r1.data.list.length > 0) {
          res = true
        }
      } else if (lf.user.getRole() === 60) {
        const r2 = await lf.net.post('/Api/Order/order_list', {
          dealer_status: 5
        })
        if (r2.code === 200 && r2.data && r2.data.list && r2.data.list.length > 0) {
          res = true
        }
        const r3 = await lf.net.post('/Api/Order/order_list', {
          dealer_status: 0
        })
        if (r3.code === 200 && r3.data && r3.data.list && r3.data.list.length > 0) {
          res = true
        }
        const r5 = await lf.net.post('/Api/Orderreturn/dealer_return_list', {
          return_status: 10
        })
        if (r5.code === 200 && r5.data && r5.data.list && r5.data.list.length > 0) {
          res2 = true
        }
      } else if (lf.user.getRole() === 50) {
        const r4 = await lf.net.post('/Api/Order/order_list', {
          dealer_status: 0
        })
        if (r4.code === 200 && r4.data && r4.data.list && r4.data.list.length > 0) {
          res = true
        }
      }
      if ((res || res2) && !this.globalData.orderRedDot) {
        this.globalData.orderRedDot = true
        await wepy.showTabBarRedDot({
          index: 3
        })
      } else if (!res && !res2 && this.globalData.orderRedDot) {
        this.globalData.orderRedDot = false
        await wepy.hideTabBarRedDot({
          index: 3
        })
      }
    } catch (e) {
      console.error(e)
    }
    return {
      order: res,
      retrunOrder: res2
    }
  }

  async showShopRedDot () {
    try {
      const num = lf.user.getGoodNum()
      if (num > 0) {
        // await wepy.showTabBarRedDot({
        //   index: 2
        // })
        wepy.setTabBarBadge({
          index: 2,
          text: num > 99 ? '99+' : num.toString()
        })
      } else {
        // await wepy.hideTabBarRedDot({
        //   index: 2
        // })
        wepy.removeTabBarBadge({
          index: 2
        })
      }
    } catch (e) {
      fireEvent(EVENT.SHOP, {
        type: TYPES.SHOP_RED_DOT_CHANGES
      })
      console.error(e)
    }
  }

  changeTabbar () {
    if (lf.user.isLogin() && lf.user.getRole() >= 50) {
      lf.log.info('lf.user.getRole()', lf.user.getRole())
      lf.log.info('this.globalData.isKD', this.globalData.isKD)
      if (this.globalData.isKD) {
        return
      }
      lf.log.info('设置为开单')
      wepy.setTabBarItem({
        index: 1,
        text: '开单',
        iconPath: 'images/icon5_on.png',
        selectedIconPath: 'images/icon5.png'
      })
      this.globalData.isKD = true
    } else if (lf.user.isLogin() && lf.user.getRole() === 30) {
      wepy.switchTab({
        url: '/pages/myCenter'
      })
      wepy.hideTabBar()
    } else {
      if (!this.globalData.isKD) {
        return
      }
      wepy.setTabBarItem({
        index: 1,
        text: '分类',
        iconPath: 'images/icon2_on.png',
        selectedIconPath: 'images/icon2.png'
      })
      this.globalData.isKD = false
    }
  }

  onLaunch (o) {
    wx.getSystemInfo({
      success: res => {
        if (res.model.indexOf('iPhone X') !== -1) {
          this.globalData.isIpx = true
        }
      }
    })
    // this.changeTabbar()
    // this.showShopRedDot()
    // this.initArea()
  }

  onShow (opt) {
    this.globalData.scene = opt.scene
  }
}
</script>
